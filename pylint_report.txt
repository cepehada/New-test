************* Module project.trade_executor.advanced_order_manager
trade_executor/advanced_order_manager.py:65:15: E0001: Parsing failed: 'unindent does not match any outer indentation level (project.trade_executor.advanced_order_manager, line 65)' (syntax-error)
************* Module project.exchange.exchange_manager
exchange/exchange_manager.py:345:0: E0001: Parsing failed: 'expected an indented block after 'elif' statement on line 342 (project.exchange.exchange_manager, line 345)' (syntax-error)
************* Module project.api.api_server
api/api_server.py:1631:24: E0001: Parsing failed: ''{' was never closed (project.api.api_server, line 1631)' (syntax-error)
************* Module project.bots.strategies.cross
bots/strategies/cross.py:123:8: E0001: Parsing failed: 'unexpected indent (project.bots.strategies.cross, line 123)' (syntax-error)
************* Module project
__init__.py:17:0: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module project.console
console.py:175:0: C0301: Line too long (156/100) (line-too-long)
console.py:500:0: C0301: Line too long (105/100) (line-too-long)
console.py:22:0: E0401: Unable to import 'project.bots.bot_manager' (import-error)
console.py:22:0: E0611: No name 'bot_manager' in module 'project.bots' (no-name-in-module)
console.py:27:0: E0611: No name 'send_trading_signal' in module 'project.utils.notify' (no-name-in-module)
console.py:34:0: C0103: Constant name "market_data" doesn't conform to UPPER_CASE naming style (invalid-name)
console.py:35:0: C0103: Constant name "order_executor" doesn't conform to UPPER_CASE naming style (invalid-name)
console.py:37:0: C0103: Constant name "strategy_manager" doesn't conform to UPPER_CASE naming style (invalid-name)
console.py:38:0: C0103: Constant name "arbitrage_core" doesn't conform to UPPER_CASE naming style (invalid-name)
console.py:39:0: C0103: Constant name "api_runner" doesn't conform to UPPER_CASE naming style (invalid-name)
console.py:76:8: W0107: Unnecessary pass statement (unnecessary-pass)
console.py:86:22: W0613: Unused argument 'arg' (unused-argument)
console.py:95:4: R0914: Too many local variables (16/15) (too-many-locals)
console.py:95:4: R0912: Too many branches (16/12) (too-many-branches)
console.py:229:18: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
console.py:310:22: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
console.py:242:4: R0912: Too many branches (18/12) (too-many-branches)
console.py:242:4: R0915: Too many statements (59/50) (too-many-statements)
console.py:421:22: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
console.py:356:4: R0912: Too many branches (17/12) (too-many-branches)
console.py:356:4: R0915: Too many statements (58/50) (too-many-statements)
console.py:546:22: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
console.py:471:4: R0912: Too many branches (18/12) (too-many-branches)
console.py:471:4: R0915: Too many statements (68/50) (too-many-statements)
console.py:617:8: W0603: Using the global statement (global-statement)
console.py:638:24: W0612: Unused variable 'site' (unused-variable)
console.py:7:0: W0611: Unused import os (unused-import)
console.py:8:0: W0611: Unused import sys (unused-import)
console.py:10:0: W0611: Unused import time (unused-import)
console.py:11:0: W0611: Unused Dict imported from typing (unused-import)
console.py:11:0: W0611: Unused List imported from typing (unused-import)
console.py:11:0: W0611: Unused Any imported from typing (unused-import)
console.py:11:0: W0611: Unused Optional imported from typing (unused-import)
console.py:13:0: W0611: Unused datetime imported from datetime (unused-import)
console.py:19:0: W0611: Unused async_handle_error imported from project.utils.error_handler (unused-import)
************* Module project.config
config.py:9:0: E0401: Unable to import 'pydantic' (import-error)
config.py:10:0: E0401: Unable to import 'pydantic_settings' (import-error)
config.py:11:0: E0401: Unable to import 'dotenv' (import-error)
config.py:23:0: R0903: Too few public methods (0/2) (too-few-public-methods)
config.py:32:0: R0903: Too few public methods (0/2) (too-few-public-methods)
config.py:49:4: C0116: Missing function or method docstring (missing-function-docstring)
config.py:49:4: E0213: Method 'parse_allowed_users' should have "self" as first argument (no-self-argument)
config.py:41:0: R0903: Too few public methods (1/2) (too-few-public-methods)
config.py:55:0: R0903: Too few public methods (0/2) (too-few-public-methods)
config.py:66:0: R0903: Too few public methods (0/2) (too-few-public-methods)
config.py:75:0: R0903: Too few public methods (0/2) (too-few-public-methods)
config.py:95:0: C0115: Missing class docstring (missing-class-docstring)
config.py:95:0: R0903: Too few public methods (0/2) (too-few-public-methods)
config.py:114:0: C0115: Missing class docstring (missing-class-docstring)
config.py:114:0: R0903: Too few public methods (0/2) (too-few-public-methods)
config.py:124:0: C0115: Missing class docstring (missing-class-docstring)
config.py:157:4: C0115: Missing class docstring (missing-class-docstring)
config.py:157:4: R0903: Too few public methods (0/2) (too-few-public-methods)
config.py:161:4: C0116: Missing function or method docstring (missing-function-docstring)
config.py:166:4: C0116: Missing function or method docstring (missing-function-docstring)
config.py:167:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
config.py:182:4: C0116: Missing function or method docstring (missing-function-docstring)
config.py:189:4: C0116: Missing function or method docstring (missing-function-docstring)
config.py:192:4: C0116: Missing function or method docstring (missing-function-docstring)
config.py:200:4: C0116: Missing function or method docstring (missing-function-docstring)
config.py:215:0: C0103: Constant name "_config_instance" doesn't conform to UPPER_CASE naming style (invalid-name)
config.py:223:4: W0603: Using the global statement (global-statement)
config.py:229:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
config.py:6:0: W0611: Unused import os (unused-import)
config.py:8:0: W0611: Unused List imported from typing (unused-import)
config.py:9:0: W0611: Unused Field imported from pydantic (unused-import)
************* Module project.utils.websocket_client
utils/websocket_client.py:350:0: C0301: Line too long (139/100) (line-too-long)
utils/websocket_client.py:1:0: C0302: Too many lines in module (1340/1000) (too-many-lines)
utils/websocket_client.py:1:0: C0114: Missing module docstring (missing-module-docstring)
utils/websocket_client.py:6:0: E0401: Unable to import 'websockets' (import-error)
utils/websocket_client.py:8:0: E0401: Unable to import 'certifi' (import-error)
utils/websocket_client.py:20:0: E0611: No name 'setup_logger' in module 'project.utils.logging_utils' (no-name-in-module)
utils/websocket_client.py:25:0: R0902: Too many instance attributes (31/7) (too-many-instance-attributes)
utils/websocket_client.py:28:4: R0913: Too many arguments (14/5) (too-many-arguments)
utils/websocket_client.py:28:4: R0917: Too many positional arguments (14/5) (too-many-positional-arguments)
utils/websocket_client.py:184:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/websocket_client.py:105:4: R0912: Too many branches (16/12) (too-many-branches)
utils/websocket_client.py:222:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/websocket_client.py:313:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/websocket_client.py:284:23: W0718: Catching too general exception Exception (broad-exception-caught)
utils/websocket_client.py:265:4: R0912: Too many branches (16/12) (too-many-branches)
utils/websocket_client.py:401:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/websocket_client.py:423:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/websocket_client.py:435:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/websocket_client.py:468:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
utils/websocket_client.py:488:23: W0718: Catching too general exception Exception (broad-exception-caught)
utils/websocket_client.py:456:4: R0911: Too many return statements (9/6) (too-many-return-statements)
utils/websocket_client.py:681:12: W0612: Unused variable 'conn_id' (unused-variable)
utils/websocket_client.py:715:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/websocket_client.py:721:9: E0602: Undefined variable 'Tuple' (undefined-variable)
utils/websocket_client.py:921:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
utils/websocket_client.py:1076:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/websocket_client.py:1155:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/websocket_client.py:1139:31: W0718: Catching too general exception Exception (broad-exception-caught)
utils/websocket_client.py:1099:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
utils/websocket_client.py:1185:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/websocket_client.py:1214:0: C0103: Constant name "_ws_pool" doesn't conform to UPPER_CASE naming style (invalid-name)
utils/websocket_client.py:1215:0: C0103: Constant name "_message_processor" doesn't conform to UPPER_CASE naming style (invalid-name)
utils/websocket_client.py:1225:4: W0603: Using the global statement (global-statement)
utils/websocket_client.py:1240:4: W0603: Using the global statement (global-statement)
utils/websocket_client.py:1264:4: W0603: Using the global statement (global-statement)
utils/websocket_client.py:1270:4: W0603: Using the global statement (global-statement)
utils/websocket_client.py:1280:5: E0602: Undefined variable 'Tuple' (undefined-variable)
utils/websocket_client.py:1313:51: W0613: Unused argument 'url' (unused-argument)
utils/websocket_client.py:1335:4: W0612: Unused variable 'signature' (unused-variable)
utils/websocket_client.py:7:0: C0411: standard import "ssl" should be placed before third party import "websockets" (wrong-import-order)
utils/websocket_client.py:9:0: C0411: standard import "zlib" should be placed before third party imports "websockets", "certifi" (wrong-import-order)
utils/websocket_client.py:10:0: C0411: standard import "base64" should be placed before third party imports "websockets", "certifi" (wrong-import-order)
utils/websocket_client.py:11:0: C0411: standard import "hmac" should be placed before third party imports "websockets", "certifi" (wrong-import-order)
utils/websocket_client.py:12:0: C0411: standard import "hashlib" should be placed before third party imports "websockets", "certifi" (wrong-import-order)
utils/websocket_client.py:13:0: C0411: standard import "typing.Dict" should be placed before third party imports "websockets", "certifi" (wrong-import-order)
utils/websocket_client.py:14:0: C0411: standard import "datetime.datetime" should be placed before third party imports "websockets", "certifi" (wrong-import-order)
utils/websocket_client.py:15:0: C0411: standard import "urllib.parse.urlparse" should be placed before third party imports "websockets", "certifi" (wrong-import-order)
utils/websocket_client.py:16:0: C0411: standard import "inspect" should be placed before third party imports "websockets", "certifi" (wrong-import-order)
utils/websocket_client.py:17:0: C0411: standard import "signal" should be placed before third party imports "websockets", "certifi" (wrong-import-order)
utils/websocket_client.py:18:0: C0411: standard import "os" should be placed before third party imports "websockets", "certifi" (wrong-import-order)
utils/websocket_client.py:2:0: W0611: Unused import logging (unused-import)
utils/websocket_client.py:5:0: W0611: Unused import random (unused-import)
utils/websocket_client.py:10:0: W0611: Unused import base64 (unused-import)
utils/websocket_client.py:14:0: W0611: Unused datetime imported from datetime (unused-import)
utils/websocket_client.py:14:0: W0611: Unused timedelta imported from datetime (unused-import)
utils/websocket_client.py:17:0: W0611: Unused import signal (unused-import)
utils/websocket_client.py:18:0: W0611: Unused import os (unused-import)
************* Module project.utils.gpu_utils
utils/gpu_utils.py:34:0: C0301: Line too long (107/100) (line-too-long)
utils/gpu_utils.py:85:0: C0301: Line too long (107/100) (line-too-long)
utils/gpu_utils.py:259:0: C0301: Line too long (120/100) (line-too-long)
utils/gpu_utils.py:340:0: C0301: Line too long (106/100) (line-too-long)
utils/gpu_utils.py:1:0: C0114: Missing module docstring (missing-module-docstring)
utils/gpu_utils.py:2:0: E0401: Unable to import 'numpy' (import-error)
utils/gpu_utils.py:3:0: E0401: Unable to import 'pandas' (import-error)
utils/gpu_utils.py:10:0: E0611: No name 'setup_logger' in module 'project.utils.logging_utils' (no-name-in-module)
utils/gpu_utils.py:45:4: C0115: Missing class docstring (missing-class-docstring)
utils/gpu_utils.py:45:4: R0903: Too few public methods (1/2) (too-few-public-methods)
utils/gpu_utils.py:51:4: C0115: Missing class docstring (missing-class-docstring)
utils/gpu_utils.py:51:4: R0903: Too few public methods (1/2) (too-few-public-methods)
utils/gpu_utils.py:58:4: C0103: Class name "cudf" doesn't conform to PascalCase naming style (invalid-name)
utils/gpu_utils.py:73:8: W0621: Redefining name 'devices' from outer scope (line 26) (redefined-outer-name)
utils/gpu_utils.py:74:12: W0621: Redefining name 'i' from outer scope (line 27) (redefined-outer-name)
utils/gpu_utils.py:75:12: W0621: Redefining name 'device' from outer scope (line 28) (redefined-outer-name)
utils/gpu_utils.py:94:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/gpu_utils.py:123:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/gpu_utils.py:156:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/gpu_utils.py:145:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
utils/gpu_utils.py:188:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/gpu_utils.py:177:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
utils/gpu_utils.py:193:0: R0914: Too many local variables (18/15) (too-many-locals)
utils/gpu_utils.py:225:12: W0621: Redefining name 'i' from outer scope (line 27) (redefined-outer-name)
utils/gpu_utils.py:263:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/gpu_utils.py:225:12: W0612: Unused variable 'i' (unused-variable)
utils/gpu_utils.py:230:12: W0612: Unused variable 'u' (unused-variable)
utils/gpu_utils.py:230:15: W0612: Unused variable 's' (unused-variable)
utils/gpu_utils.py:230:18: W0612: Unused variable 'v' (unused-variable)
utils/gpu_utils.py:278:4: W0621: Redefining name 'i' from outer scope (line 27) (redefined-outer-name)
utils/gpu_utils.py:327:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/gpu_utils.py:342:4: W0621: Redefining name 'i' from outer scope (line 27) (redefined-outer-name)
utils/gpu_utils.py:344:7: R1716: Simplify chained comparison between the operands (chained-comparison)
utils/gpu_utils.py:369:12: W0621: Redefining name 'i' from outer scope (line 27) (redefined-outer-name)
utils/gpu_utils.py:395:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/gpu_utils.py:416:4: W0621: Redefining name 'i' from outer scope (line 27) (redefined-outer-name)
utils/gpu_utils.py:418:7: R1716: Simplify chained comparison between the operands (chained-comparison)
utils/gpu_utils.py:462:12: W0621: Redefining name 'i' from outer scope (line 27) (redefined-outer-name)
utils/gpu_utils.py:494:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/gpu_utils.py:551:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/gpu_utils.py:567:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/gpu_utils.py:4:0: C0411: standard import "time" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
utils/gpu_utils.py:5:0: C0411: standard import "os" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
utils/gpu_utils.py:6:0: C0411: standard import "sys" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
utils/gpu_utils.py:7:0: C0411: standard import "typing.Dict" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
utils/gpu_utils.py:8:0: C0411: standard import "warnings" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
utils/gpu_utils.py:1:0: W0611: Unused import logging (unused-import)
utils/gpu_utils.py:5:0: W0611: Unused import os (unused-import)
utils/gpu_utils.py:6:0: W0611: Unused import sys (unused-import)
utils/gpu_utils.py:7:0: W0611: Unused List imported from typing (unused-import)
utils/gpu_utils.py:7:0: W0611: Unused Optional imported from typing (unused-import)
utils/gpu_utils.py:7:0: W0611: Unused Any imported from typing (unused-import)
utils/gpu_utils.py:8:0: W0611: Unused import warnings (unused-import)
utils/gpu_utils.py:18:4: W0611: Unused import numba (unused-import)
************* Module project.utils.logging_utils
utils/logging_utils.py:79:11: W0718: Catching too general exception Exception (broad-exception-caught)
utils/logging_utils.py:77:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/logging_utils.py:91:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/logging_utils.py:107:8: C0415: Import outside toplevel (inspect) (import-outside-toplevel)
utils/logging_utils.py:117:8: W0127: Assigning the same variable 'name' to itself (self-assigning-variable)
utils/logging_utils.py:134:4: W0621: Redefining name 'logger' from outer scope (line 171) (redefined-outer-name)
utils/logging_utils.py:140:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/logging_utils.py:156:4: W0621: Redefining name 'logger' from outer scope (line 171) (redefined-outer-name)
utils/logging_utils.py:162:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/logging_utils.py:11:0: W0611: Unused Path imported from pathlib (unused-import)
utils/logging_utils.py:12:0: W0611: Unused Optional imported from typing (unused-import)
utils/logging_utils.py:12:0: W0611: Unused Dict imported from typing (unused-import)
utils/logging_utils.py:12:0: W0611: Unused Any imported from typing (unused-import)
************* Module project.utils.notify
utils/notify.py:211:0: C0301: Line too long (144/100) (line-too-long)
utils/notify.py:1:0: C0302: Too many lines in module (1555/1000) (too-many-lines)
utils/notify.py:1:0: C0114: Missing module docstring (missing-module-docstring)
utils/notify.py:4:0: E0401: Unable to import 'httpx' (import-error)
utils/notify.py:14:0: E0611: No name 'setup_logger' in module 'project.utils.logging_utils' (no-name-in-module)
utils/notify.py:19:0: R0902: Too many instance attributes (35/7) (too-many-instance-attributes)
utils/notify.py:107:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:19:0: R0903: Too few public methods (1/2) (too-few-public-methods)
utils/notify.py:111:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
utils/notify.py:233:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:414:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:453:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:509:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:580:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:527:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
utils/notify.py:513:4: R0911: Too many return statements (7/6) (too-many-return-statements)
utils/notify.py:657:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:718:4: R0913: Too many arguments (6/5) (too-many-arguments)
utils/notify.py:718:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
utils/notify.py:776:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:782:0: C0103: Constant name "_notification_service" doesn't conform to UPPER_CASE naming style (invalid-name)
utils/notify.py:792:4: W0603: Using the global statement (global-statement)
utils/notify.py:799:4: W0603: Using the global statement (global-statement)
utils/notify.py:807:4: W0602: Using global for '_notification_service' but no assignment is done (global-variable-not-assigned)
utils/notify.py:834:4: W0603: Using the global statement (global-statement)
utils/notify.py:857:4: W0602: Using global for '_notification_service' but no assignment is done (global-variable-not-assigned)
utils/notify.py:865:4: W0602: Using global for '_notification_service' but no assignment is done (global-variable-not-assigned)
utils/notify.py:870:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)
utils/notify.py:971:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:996:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:1024:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:1063:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:1210:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:1273:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:1316:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:1366:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:1370:4: R0913: Too many arguments (8/5) (too-many-arguments)
utils/notify.py:1370:4: R0917: Too many positional arguments (8/5) (too-many-positional-arguments)
utils/notify.py:1425:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:1452:4: R0913: Too many arguments (6/5) (too-many-arguments)
utils/notify.py:1452:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
utils/notify.py:1452:4: R0914: Too many local variables (20/15) (too-many-locals)
utils/notify.py:1538:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:1525:27: W0718: Catching too general exception Exception (broad-exception-caught)
utils/notify.py:1507:24: C0415: Import outside toplevel (mimetypes) (import-outside-toplevel)
utils/notify.py:1509:38: W0612: Unused variable 'encoding' (unused-variable)
utils/notify.py:1513:24: W0612: Unused variable 'main_type' (unused-variable)
utils/notify.py:1430:0: R0903: Too few public methods (1/2) (too-few-public-methods)
utils/notify.py:5:0: C0411: standard import "smtplib" should be placed before third party import "httpx" (wrong-import-order)
utils/notify.py:6:0: C0411: standard import "os" should be placed before third party import "httpx" (wrong-import-order)
utils/notify.py:7:0: C0411: standard import "time" should be placed before third party import "httpx" (wrong-import-order)
utils/notify.py:8:0: C0411: standard import "typing.Dict" should be placed before third party import "httpx" (wrong-import-order)
utils/notify.py:9:0: C0411: standard import "datetime.datetime" should be placed before third party import "httpx" (wrong-import-order)
utils/notify.py:10:0: C0411: standard import "email.mime.text.MIMEText" should be placed before third party import "httpx" (wrong-import-order)
utils/notify.py:11:0: C0411: standard import "email.mime.multipart.MIMEMultipart" should be placed before third party import "httpx" (wrong-import-order)
utils/notify.py:12:0: C0411: standard import "pathlib.Path" should be placed before third party import "httpx" (wrong-import-order)
utils/notify.py:2:0: W0611: Unused import logging (unused-import)
utils/notify.py:8:0: W0611: Unused Optional imported from typing (unused-import)
************* Module project.utils.http_utils
utils/http_utils.py:192:0: C0301: Line too long (142/100) (line-too-long)
utils/http_utils.py:518:0: C0301: Line too long (111/100) (line-too-long)
utils/http_utils.py:530:0: C0301: Line too long (102/100) (line-too-long)
utils/http_utils.py:622:0: C0301: Line too long (111/100) (line-too-long)
utils/http_utils.py:634:0: C0301: Line too long (102/100) (line-too-long)
utils/http_utils.py:1:0: C0114: Missing module docstring (missing-module-docstring)
utils/http_utils.py:2:0: E0401: Unable to import 'httpx' (import-error)
utils/http_utils.py:13:0: E0611: No name 'setup_logger' in module 'project.utils.logging_utils' (no-name-in-module)
utils/http_utils.py:109:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/http_utils.py:107:21: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
utils/http_utils.py:119:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/http_utils.py:117:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
utils/http_utils.py:247:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/http_utils.py:244:21: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
utils/http_utils.py:252:4: R0913: Too many arguments (6/5) (too-many-arguments)
utils/http_utils.py:252:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
utils/http_utils.py:302:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/http_utils.py:294:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
utils/http_utils.py:305:4: R0912: Too many branches (14/12) (too-many-branches)
utils/http_utils.py:357:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
utils/http_utils.py:360:4: R0913: Too many arguments (11/5) (too-many-arguments)
utils/http_utils.py:360:4: R0917: Too many positional arguments (11/5) (too-many-positional-arguments)
utils/http_utils.py:432:4: R0913: Too many arguments (7/5) (too-many-arguments)
utils/http_utils.py:432:4: R0917: Too many positional arguments (7/5) (too-many-positional-arguments)
utils/http_utils.py:527:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/http_utils.py:542:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
utils/http_utils.py:545:12: W0719: Raising too general exception: Exception (broad-exception-raised)
utils/http_utils.py:432:4: R0912: Too many branches (14/12) (too-many-branches)
utils/http_utils.py:549:4: R0913: Too many arguments (6/5) (too-many-arguments)
utils/http_utils.py:549:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
utils/http_utils.py:631:19: W0718: Catching too general exception Exception (broad-exception-caught)
utils/http_utils.py:646:8: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
utils/http_utils.py:649:12: W0719: Raising too general exception: Exception (broad-exception-raised)
utils/http_utils.py:655:0: C0103: Constant name "_http_client" doesn't conform to UPPER_CASE naming style (invalid-name)
utils/http_utils.py:658:0: R0913: Too many arguments (10/5) (too-many-arguments)
utils/http_utils.py:658:0: R0917: Too many positional arguments (10/5) (too-many-positional-arguments)
utils/http_utils.py:688:4: W0603: Using the global statement (global-statement)
utils/http_utils.py:713:4: W0603: Using the global statement (global-statement)
utils/http_utils.py:724:0: R0913: Too many arguments (9/5) (too-many-arguments)
utils/http_utils.py:724:0: R0917: Too many positional arguments (9/5) (too-many-positional-arguments)
utils/http_utils.py:758:4: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
utils/http_utils.py:3:0: C0411: standard import "logging" should be placed before third party import "httpx" (wrong-import-order)
utils/http_utils.py:4:0: C0411: standard import "time" should be placed before third party import "httpx" (wrong-import-order)
utils/http_utils.py:5:0: C0411: standard import "json" should be placed before third party import "httpx" (wrong-import-order)
utils/http_utils.py:6:0: C0411: standard import "hashlib" should be placed before third party import "httpx" (wrong-import-order)
utils/http_utils.py:7:0: C0411: standard import "typing.Dict" should be placed before third party import "httpx" (wrong-import-order)
utils/http_utils.py:8:0: C0411: standard import "functools.wraps" should be placed before third party import "httpx" (wrong-import-order)
utils/http_utils.py:9:0: C0411: standard import "datetime.datetime" should be placed before third party import "httpx" (wrong-import-order)
utils/http_utils.py:10:0: C0411: standard import "os" should be placed before third party import "httpx" (wrong-import-order)
utils/http_utils.py:11:0: C0411: standard import "tempfile" should be placed before third party import "httpx" (wrong-import-order)
utils/http_utils.py:3:0: W0611: Unused import logging (unused-import)
utils/http_utils.py:7:0: W0611: Unused Callable imported from typing (unused-import)
utils/http_utils.py:7:0: W0611: Unused Tuple imported from typing (unused-import)
utils/http_utils.py:7:0: W0611: Unused List imported from typing (unused-import)
utils/http_utils.py:7:0: W0611: Unused Union imported from typing (unused-import)
utils/http_utils.py:8:0: W0611: Unused wraps imported from functools (unused-import)
utils/http_utils.py:9:0: W0611: Unused datetime imported from datetime (unused-import)
utils/http_utils.py:9:0: W0611: Unused timedelta imported from datetime (unused-import)
************* Module project.utils.error_handler
utils/error_handler.py:36:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/error_handler.py:52:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/error_handler.py:58:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/error_handler.py:64:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/error_handler.py:73:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/error_handler.py:94:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/error_handler.py:115:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/error_handler.py:125:4: W0621: Redefining name 'logger' from outer scope (line 19) (redefined-outer-name)
utils/error_handler.py:157:24: C0415: Import outside toplevel (time) (import-outside-toplevel)
utils/error_handler.py:161:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/error_handler.py:162:24: W0707: Consider explicitly re-raising using 'raise last_exception from e' (raise-missing-from)
utils/error_handler.py:178:4: W0621: Redefining name 'logger' from outer scope (line 19) (redefined-outer-name)
utils/error_handler.py:212:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/error_handler.py:213:24: W0707: Consider explicitly re-raising using 'raise last_exception from e' (raise-missing-from)
utils/error_handler.py:232:35: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/error_handler.py:235:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/error_handler.py:238:30: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/error_handler.py:240:47: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/error_handler.py:267:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/error_handler.py:260:0: R1711: Useless return at end of function or method (useless-return)
utils/error_handler.py:278:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/error_handler.py:294:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/error_handler.py:7:0: W0611: Unused import traceback (unused-import)
utils/error_handler.py:11:0: W0611: Unused Union imported from typing (unused-import)
************* Module project.utils.ccxt_exchanges
utils/ccxt_exchanges.py:6:0: E0401: Unable to import 'ccxt.async_support' (import-error)
utils/ccxt_exchanges.py:37:4: W0602: Using global for '_exchange_instances' but no assignment is done (global-variable-not-assigned)
utils/ccxt_exchanges.py:44:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:52:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:58:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:85:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:89:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:96:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:99:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:102:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:113:4: W0602: Using global for '_exchange_instances' but no assignment is done (global-variable-not-assigned)
utils/ccxt_exchanges.py:120:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/ccxt_exchanges.py:118:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:121:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:130:4: W0602: Using global for '_exchange_instances' but no assignment is done (global-variable-not-assigned)
utils/ccxt_exchanges.py:136:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/ccxt_exchanges.py:135:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:137:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:161:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:164:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:167:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:198:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:203:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:228:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:231:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:253:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:256:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:261:0: R0913: Too many arguments (7/5) (too-many-arguments)
utils/ccxt_exchanges.py:261:0: R0917: Too many positional arguments (7/5) (too-many-positional-arguments)
utils/ccxt_exchanges.py:264:4: W0622: Redefining built-in 'type' (redefined-builtin)
utils/ccxt_exchanges.py:290:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:296:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:324:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:327:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:355:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:358:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:390:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:393:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:425:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:428:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:460:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:463:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:495:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:498:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/ccxt_exchanges.py:7:0: C0411: standard import "asyncio" should be placed before third party import "ccxt.async_support" (wrong-import-order)
utils/ccxt_exchanges.py:8:0: C0411: standard import "logging" should be placed before third party import "ccxt.async_support" (wrong-import-order)
utils/ccxt_exchanges.py:9:0: C0411: standard import "time" should be placed before third party import "ccxt.async_support" (wrong-import-order)
utils/ccxt_exchanges.py:10:0: C0411: standard import "typing.Dict" should be placed before third party import "ccxt.async_support" (wrong-import-order)
utils/ccxt_exchanges.py:7:0: W0611: Unused import asyncio (unused-import)
utils/ccxt_exchanges.py:8:0: W0611: Unused import logging (unused-import)
utils/ccxt_exchanges.py:9:0: W0611: Unused import time (unused-import)
utils/ccxt_exchanges.py:10:0: W0611: Unused Union imported from typing (unused-import)
utils/ccxt_exchanges.py:10:0: W0611: Unused Tuple imported from typing (unused-import)
************* Module project.utils.cache_utils
utils/cache_utils.py:45:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/cache_utils.py:51:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/cache_utils.py:81:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/cache_utils.py:87:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/cache_utils.py:103:4: W0602: Using global for '_cache' but no assignment is done (global-variable-not-assigned)
utils/cache_utils.py:109:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/cache_utils.py:112:37: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
utils/cache_utils.py:115:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/cache_utils.py:162:4: W0602: Using global for '_cache' but no assignment is done (global-variable-not-assigned)
utils/cache_utils.py:170:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/cache_utils.py:181:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/cache_utils.py:192:15: W0718: Catching too general exception Exception (broad-exception-caught)
utils/cache_utils.py:188:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/cache_utils.py:193:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
utils/cache_utils.py:10:0: W0611: Unused import logging (unused-import)
************* Module project.config.configuration
config/configuration.py:1:0: C0114: Missing module docstring (missing-module-docstring)
config/configuration.py:3:0: E0401: Unable to import 'yaml' (import-error)
config/configuration.py:11:0: E0611: No name 'setup_logger' in module 'project.utils.logging_utils' (no-name-in-module)
config/configuration.py:86:15: W0718: Catching too general exception Exception (broad-exception-caught)
config/configuration.py:127:15: W0718: Catching too general exception Exception (broad-exception-caught)
config/configuration.py:188:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
config/configuration.py:196:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
config/configuration.py:205:12: W0702: No exception type(s) specified (bare-except)
config/configuration.py:210:12: W0702: No exception type(s) specified (bare-except)
config/configuration.py:176:4: R0911: Too many return statements (7/6) (too-many-return-statements)
config/configuration.py:298:15: W0718: Catching too general exception Exception (broad-exception-caught)
config/configuration.py:28:11: E0203: Access to member '_initialized' before its definition line 49 (access-member-before-definition)
config/configuration.py:385:0: C0103: Constant name "_config" doesn't conform to UPPER_CASE naming style (invalid-name)
config/configuration.py:395:4: W0603: Using the global statement (global-statement)
config/configuration.py:413:4: W0603: Using the global statement (global-statement)
config/configuration.py:4:0: C0411: standard import "logging" should be placed before third party import "yaml" (wrong-import-order)
config/configuration.py:5:0: C0411: standard import "typing.Dict" should be placed before third party import "yaml" (wrong-import-order)
config/configuration.py:6:0: C0411: standard import "pathlib.Path" should be placed before third party import "yaml" (wrong-import-order)
config/configuration.py:7:0: C0411: standard import "copy" should be placed before third party import "yaml" (wrong-import-order)
config/configuration.py:8:0: C0411: standard import "time" should be placed before third party import "yaml" (wrong-import-order)
config/configuration.py:9:0: C0411: standard import "datetime.datetime" should be placed before third party import "yaml" (wrong-import-order)
config/configuration.py:4:0: W0611: Unused import logging (unused-import)
config/configuration.py:5:0: W0611: Unused Optional imported from typing (unused-import)
config/configuration.py:5:0: W0611: Unused Union imported from typing (unused-import)
config/configuration.py:6:0: W0611: Unused Path imported from pathlib (unused-import)
************* Module project.trade_executor.order_executor
trade_executor/order_executor.py:173:0: C0301: Line too long (103/100) (line-too-long)
trade_executor/order_executor.py:26:0: E0611: No name 'send_trading_signal' in module 'project.utils.notify' (no-name-in-module)
trade_executor/order_executor.py:32:0: R0902: Too many instance attributes (9/7) (too-many-instance-attributes)
trade_executor/order_executor.py:78:4: R0913: Too many arguments (7/5) (too-many-arguments)
trade_executor/order_executor.py:78:4: R0917: Too many positional arguments (7/5) (too-many-positional-arguments)
trade_executor/order_executor.py:172:15: W0718: Catching too general exception Exception (broad-exception-caught)
trade_executor/order_executor.py:119:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
trade_executor/order_executor.py:131:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
trade_executor/order_executor.py:235:15: W0718: Catching too general exception Exception (broad-exception-caught)
trade_executor/order_executor.py:204:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
trade_executor/order_executor.py:210:12: W0612: Unused variable 'result' (unused-variable)
trade_executor/order_executor.py:297:15: W0718: Catching too general exception Exception (broad-exception-caught)
trade_executor/order_executor.py:280:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
trade_executor/order_executor.py:336:15: W0718: Catching too general exception Exception (broad-exception-caught)
trade_executor/order_executor.py:329:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
trade_executor/order_executor.py:457:38: W0613: Unused argument 'exchange_id' (unused-argument)
trade_executor/order_executor.py:517:4: R0914: Too many local variables (17/15) (too-many-locals)
trade_executor/order_executor.py:531:12: W0622: Redefining built-in 'type' (redefined-builtin)
trade_executor/order_executor.py:562:15: W0718: Catching too general exception Exception (broad-exception-caught)
trade_executor/order_executor.py:540:12: C0415: Import outside toplevel (project.data.database.Database) (import-outside-toplevel)
trade_executor/order_executor.py:542:22: E1101: Class 'Database' has no 'get_instance' member (no-member)
trade_executor/order_executor.py:560:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
trade_executor/order_executor.py:563:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
trade_executor/order_executor.py:6:0: W0611: Unused import asyncio (unused-import)
trade_executor/order_executor.py:7:0: W0611: Unused import logging (unused-import)
trade_executor/order_executor.py:10:0: W0611: Unused Union imported from typing (unused-import)
trade_executor/order_executor.py:10:0: W0611: Unused Tuple imported from typing (unused-import)
trade_executor/order_executor.py:15:0: W0611: Unused async_with_retry imported from project.utils.error_handler (unused-import)
trade_executor/order_executor.py:16:0: W0611: Unused connect_exchange imported from project.utils.ccxt_exchanges (unused-import)
************* Module project.technical_analysis.indicators
technical_analysis/indicators.py:168:0: C0301: Line too long (113/100) (line-too-long)
technical_analysis/indicators.py:278:0: C0301: Line too long (133/100) (line-too-long)
technical_analysis/indicators.py:288:0: C0301: Line too long (102/100) (line-too-long)
technical_analysis/indicators.py:300:0: C0301: Line too long (122/100) (line-too-long)
technical_analysis/indicators.py:303:0: C0301: Line too long (159/100) (line-too-long)
technical_analysis/indicators.py:312:0: C0301: Line too long (110/100) (line-too-long)
technical_analysis/indicators.py:6:0: E0401: Unable to import 'numpy' (import-error)
technical_analysis/indicators.py:7:0: E0401: Unable to import 'pandas' (import-error)
technical_analysis/indicators.py:40:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
technical_analysis/indicators.py:62:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
technical_analysis/indicators.py:88:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
technical_analysis/indicators.py:122:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
technical_analysis/indicators.py:167:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
technical_analysis/indicators.py:208:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
technical_analysis/indicators.py:277:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
technical_analysis/indicators.py:424:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
technical_analysis/indicators.py:542:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
technical_analysis/indicators.py:8:0: C0411: standard import "logging" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
technical_analysis/indicators.py:9:0: C0411: standard import "typing.Dict" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
technical_analysis/indicators.py:8:0: W0611: Unused import logging (unused-import)
technical_analysis/indicators.py:9:0: W0611: Unused List imported from typing (unused-import)
technical_analysis/indicators.py:9:0: W0611: Unused Any imported from typing (unused-import)
technical_analysis/indicators.py:9:0: W0611: Unused Optional imported from typing (unused-import)
technical_analysis/indicators.py:9:0: W0611: Unused Union imported from typing (unused-import)
technical_analysis/indicators.py:9:0: W0611: Unused Tuple imported from typing (unused-import)
technical_analysis/indicators.py:13:0: W0611: Unused cache imported from project.utils.cache_utils (unused-import)
************* Module project.technical_analysis.signal_generator
technical_analysis/signal_generator.py:46:0: C0301: Line too long (124/100) (line-too-long)
technical_analysis/signal_generator.py:128:0: C0301: Line too long (105/100) (line-too-long)
technical_analysis/signal_generator.py:209:0: C0301: Line too long (107/100) (line-too-long)
technical_analysis/signal_generator.py:6:0: E0401: Unable to import 'numpy' (import-error)
technical_analysis/signal_generator.py:7:0: E0401: Unable to import 'pandas' (import-error)
technical_analysis/signal_generator.py:45:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
technical_analysis/signal_generator.py:89:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
technical_analysis/signal_generator.py:127:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
technical_analysis/signal_generator.py:166:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
technical_analysis/signal_generator.py:208:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
technical_analysis/signal_generator.py:279:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
technical_analysis/signal_generator.py:8:0: C0411: standard import "logging" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
technical_analysis/signal_generator.py:9:0: C0411: standard import "typing.Dict" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
technical_analysis/signal_generator.py:6:0: W0611: Unused numpy imported as np (unused-import)
technical_analysis/signal_generator.py:8:0: W0611: Unused import logging (unused-import)
technical_analysis/signal_generator.py:9:0: W0611: Unused Any imported from typing (unused-import)
technical_analysis/signal_generator.py:9:0: W0611: Unused Union imported from typing (unused-import)
technical_analysis/signal_generator.py:9:0: W0611: Unused Tuple imported from typing (unused-import)
************* Module project.technical_analysis.patterns
technical_analysis/patterns.py:6:0: E0401: Unable to import 'numpy' (import-error)
technical_analysis/patterns.py:7:0: E0401: Unable to import 'pandas' (import-error)
technical_analysis/patterns.py:450:42: W0613: Unused argument 'threshold' (unused-argument)
technical_analysis/patterns.py:488:45: W0613: Unused argument 'threshold' (unused-argument)
technical_analysis/patterns.py:8:0: C0411: standard import "logging" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
technical_analysis/patterns.py:9:0: C0411: standard import "typing.Dict" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
technical_analysis/patterns.py:6:0: W0611: Unused numpy imported as np (unused-import)
technical_analysis/patterns.py:8:0: W0611: Unused import logging (unused-import)
technical_analysis/patterns.py:9:0: W0611: Unused Dict imported from typing (unused-import)
technical_analysis/patterns.py:9:0: W0611: Unused List imported from typing (unused-import)
technical_analysis/patterns.py:9:0: W0611: Unused Any imported from typing (unused-import)
technical_analysis/patterns.py:9:0: W0611: Unused Optional imported from typing (unused-import)
technical_analysis/patterns.py:9:0: W0611: Unused Union imported from typing (unused-import)
technical_analysis/patterns.py:9:0: W0611: Unused Tuple imported from typing (unused-import)
technical_analysis/patterns.py:13:0: W0611: Unused Indicators imported from project.technical_analysis.indicators (unused-import)
************* Module project.infrastructure.database
infrastructure/database.py:7:0: E0401: Unable to import 'asyncpg' (import-error)
infrastructure/database.py:69:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/database.py:87:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/database.py:107:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/database.py:128:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/database.py:149:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/database.py:171:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/database.py:221:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/database.py:254:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/database.py:308:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/database.py:8:0: C0411: standard import "logging" should be placed before third party import "asyncpg" (wrong-import-order)
infrastructure/database.py:9:0: C0411: standard import "typing.Dict" should be placed before third party import "asyncpg" (wrong-import-order)
infrastructure/database.py:10:0: C0411: standard import "contextlib.asynccontextmanager" should be placed before third party import "asyncpg" (wrong-import-order)
infrastructure/database.py:6:0: W0611: Unused import asyncio (unused-import)
infrastructure/database.py:8:0: W0611: Unused import logging (unused-import)
infrastructure/database.py:9:0: W0611: Unused Tuple imported from typing (unused-import)
************* Module project.infrastructure.message_broker
infrastructure/message_broker.py:74:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/message_broker.py:116:15: W0718: Catching too general exception Exception (broad-exception-caught)
infrastructure/message_broker.py:100:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/message_broker.py:110:27: W0718: Catching too general exception Exception (broad-exception-caught)
infrastructure/message_broker.py:111:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/message_broker.py:117:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/message_broker.py:153:15: W0718: Catching too general exception Exception (broad-exception-caught)
infrastructure/message_broker.py:146:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/message_broker.py:154:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/message_broker.py:184:15: W0718: Catching too general exception Exception (broad-exception-caught)
infrastructure/message_broker.py:173:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/message_broker.py:185:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/message_broker.py:198:19: W0718: Catching too general exception Exception (broad-exception-caught)
infrastructure/message_broker.py:199:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/message_broker.py:8:0: W0611: Unused import logging (unused-import)
infrastructure/message_broker.py:9:0: W0611: Unused Union imported from typing (unused-import)
************* Module project.infrastructure.cache_service
infrastructure/cache_service.py:107:23: W0718: Catching too general exception Exception (broad-exception-caught)
infrastructure/cache_service.py:108:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/cache_service.py:112:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/cache_service.py:151:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/cache_service.py:170:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/cache_service.py:174:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/cache_service.py:184:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/cache_service.py:204:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/cache_service.py:207:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/cache_service.py:233:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/cache_service.py:248:45: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
infrastructure/cache_service.py:257:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/cache_service.py:272:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/cache_service.py:304:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
infrastructure/cache_service.py:8:0: W0611: Unused import logging (unused-import)
************* Module project.data.database
data/database.py:680:0: C0301: Line too long (101/100) (line-too-long)
data/database.py:865:0: C0301: Line too long (106/100) (line-too-long)
data/database.py:1068:0: C0301: Line too long (116/100) (line-too-long)
data/database.py:1381:0: C0301: Line too long (112/100) (line-too-long)
data/database.py:1524:0: C0301: Line too long (101/100) (line-too-long)
data/database.py:1756:0: C0301: Line too long (110/100) (line-too-long)
data/database.py:1:0: C0302: Too many lines in module (2401/1000) (too-many-lines)
data/database.py:1:0: C0114: Missing module docstring (missing-module-docstring)
data/database.py:8:0: E0401: Unable to import 'aiosqlite' (import-error)
data/database.py:9:0: E0401: Unable to import 'pandas' (import-error)
data/database.py:10:0: E0401: Unable to import 'numpy' (import-error)
data/database.py:13:0: E0611: No name 'setup_logger' in module 'project.utils.logging_utils' (no-name-in-module)
data/database.py:380:4: R0913: Too many arguments (7/5) (too-many-arguments)
data/database.py:380:4: R0917: Too many positional arguments (7/5) (too-many-positional-arguments)
data/database.py:437:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
data/database.py:513:4: R0913: Too many arguments (6/5) (too-many-arguments)
data/database.py:513:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
data/database.py:513:4: R0914: Too many local variables (16/15) (too-many-locals)
data/database.py:687:4: R0913: Too many arguments (8/5) (too-many-arguments)
data/database.py:687:4: R0917: Too many positional arguments (8/5) (too-many-positional-arguments)
data/database.py:687:4: R0914: Too many local variables (18/15) (too-many-locals)
data/database.py:687:4: R0912: Too many branches (15/12) (too-many-branches)
data/database.py:687:4: R0915: Too many statements (51/50) (too-many-statements)
data/database.py:872:4: R0913: Too many arguments (8/5) (too-many-arguments)
data/database.py:872:4: R0917: Too many positional arguments (8/5) (too-many-positional-arguments)
data/database.py:872:4: R0914: Too many local variables (18/15) (too-many-locals)
data/database.py:872:4: R0912: Too many branches (15/12) (too-many-branches)
data/database.py:1075:4: R0913: Too many arguments (7/5) (too-many-arguments)
data/database.py:1075:4: R0917: Too many positional arguments (7/5) (too-many-positional-arguments)
data/database.py:1075:4: R0914: Too many local variables (17/15) (too-many-locals)
data/database.py:1075:4: R0912: Too many branches (17/12) (too-many-branches)
data/database.py:1239:4: R0912: Too many branches (15/12) (too-many-branches)
data/database.py:1547:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
data/database.py:1672:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
data/database.py:1782:4: R0913: Too many arguments (6/5) (too-many-arguments)
data/database.py:1782:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
data/database.py:1782:4: R0914: Too many local variables (16/15) (too-many-locals)
data/database.py:1906:15: W0718: Catching too general exception Exception (broad-exception-caught)
data/database.py:1910:4: R0913: Too many arguments (6/5) (too-many-arguments)
data/database.py:1910:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
data/database.py:1910:4: R0914: Too many local variables (16/15) (too-many-locals)
data/database.py:1913:8: W0621: Redefining name 'logger' from outer scope (line 15) (redefined-outer-name)
data/database.py:2125:15: W0718: Catching too general exception Exception (broad-exception-caught)
data/database.py:2136:8: C0415: Import outside toplevel (sqlite3) (import-outside-toplevel)
data/database.py:2179:15: W0718: Catching too general exception Exception (broad-exception-caught)
data/database.py:2190:8: C0415: Import outside toplevel (sqlite3) (import-outside-toplevel)
data/database.py:2191:8: C0415: Import outside toplevel (shutil) (import-outside-toplevel)
data/database.py:2190:8: W0611: Unused import sqlite3 (unused-import)
data/database.py:2277:19: W0718: Catching too general exception Exception (broad-exception-caught)
data/database.py:18:0: R0904: Too many public methods (33/20) (too-many-public-methods)
data/database.py:11:0: C0411: standard import "pathlib.Path" should be placed before third party imports "aiosqlite", "pandas", "numpy" (wrong-import-order)
data/database.py:2:0: W0611: Unused import logging (unused-import)
data/database.py:6:0: W0611: Unused Optional imported from typing (unused-import)
data/database.py:6:0: W0611: Unused Any imported from typing (unused-import)
data/database.py:6:0: W0611: Unused Union imported from typing (unused-import)
data/database.py:6:0: W0611: Unused Tuple imported from typing (unused-import)
data/database.py:10:0: W0611: Unused numpy imported as np (unused-import)
data/database.py:11:0: W0611: Unused Path imported from pathlib (unused-import)
************* Module project.data.market_data
data/market_data.py:277:0: C0301: Line too long (106/100) (line-too-long)
data/market_data.py:286:0: C0301: Line too long (104/100) (line-too-long)
data/market_data.py:297:0: C0301: Line too long (109/100) (line-too-long)
data/market_data.py:386:0: C0301: Line too long (102/100) (line-too-long)
data/market_data.py:10:0: E0401: Unable to import 'numpy' (import-error)
data/market_data.py:11:0: E0401: Unable to import 'pandas' (import-error)
data/market_data.py:26:0: R0902: Too many instance attributes (10/7) (too-many-instance-attributes)
data/market_data.py:89:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:102:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:107:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:113:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:121:4: R0913: Too many arguments (6/5) (too-many-arguments)
data/market_data.py:121:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
data/market_data.py:150:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:171:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:174:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:180:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:212:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:225:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:230:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:236:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:243:4: R0913: Too many arguments (9/5) (too-many-arguments)
data/market_data.py:243:4: R0917: Too many positional arguments (9/5) (too-many-positional-arguments)
data/market_data.py:276:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:285:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:296:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:330:27: W0718: Catching too general exception Exception (broad-exception-caught)
data/market_data.py:331:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:358:27: W0718: Catching too general exception Exception (broad-exception-caught)
data/market_data.py:359:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:384:27: W0718: Catching too general exception Exception (broad-exception-caught)
data/market_data.py:385:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:413:4: R0914: Too many local variables (16/15) (too-many-locals)
data/market_data.py:496:15: W0718: Catching too general exception Exception (broad-exception-caught)
data/market_data.py:497:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/market_data.py:7:0: W0611: Unused import logging (unused-import)
data/market_data.py:9:0: W0611: Unused Union imported from typing (unused-import)
data/market_data.py:9:0: W0611: Unused Tuple imported from typing (unused-import)
data/market_data.py:10:0: W0611: Unused numpy imported as np (unused-import)
data/market_data.py:14:0: W0611: Unused async_handle_error imported from project.utils.error_handler (unused-import)
data/market_data.py:14:0: W0611: Unused async_with_retry imported from project.utils.error_handler (unused-import)
data/market_data.py:16:0: W0611: Unused connect_exchange imported from project.utils.ccxt_exchanges (unused-import)
************* Module project.data.symbol_manager
data/symbol_manager.py:169:0: C0301: Line too long (105/100) (line-too-long)
data/symbol_manager.py:214:0: C0301: Line too long (108/100) (line-too-long)
data/symbol_manager.py:67:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/symbol_manager.py:93:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/symbol_manager.py:123:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/symbol_manager.py:153:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/symbol_manager.py:174:8: C0415: Import outside toplevel (project.data.market_data.MarketData) (import-outside-toplevel)
data/symbol_manager.py:189:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/symbol_manager.py:208:19: W0718: Catching too general exception Exception (broad-exception-caught)
data/symbol_manager.py:209:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/symbol_manager.py:213:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/symbol_manager.py:233:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/symbol_manager.py:239:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
data/symbol_manager.py:266:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/symbol_manager.py:306:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
data/symbol_manager.py:6:0: W0611: Unused import asyncio (unused-import)
data/symbol_manager.py:7:0: W0611: Unused import logging (unused-import)
data/symbol_manager.py:8:0: W0611: Unused Set imported from typing (unused-import)
data/symbol_manager.py:12:0: W0611: Unused async_with_retry imported from project.utils.error_handler (unused-import)
************* Module project.optimization.genetic_optimizer
optimization/genetic_optimizer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
optimization/genetic_optimizer.py:8:0: E0401: Unable to import 'numpy' (import-error)
optimization/genetic_optimizer.py:9:0: E0401: Unable to import 'pandas' (import-error)
optimization/genetic_optimizer.py:15:0: E0611: No name 'setup_logger' in module 'project.utils.logging_utils' (no-name-in-module)
optimization/genetic_optimizer.py:107:0: R0902: Too many instance attributes (13/7) (too-many-instance-attributes)
optimization/genetic_optimizer.py:228:0: R0902: Too many instance attributes (16/7) (too-many-instance-attributes)
optimization/genetic_optimizer.py:286:4: R0913: Too many arguments (7/5) (too-many-arguments)
optimization/genetic_optimizer.py:286:4: R0917: Too many positional arguments (7/5) (too-many-positional-arguments)
optimization/genetic_optimizer.py:418:15: W0718: Catching too general exception Exception (broad-exception-caught)
optimization/genetic_optimizer.py:438:8: W0613: Unused argument 'strategy_class' (unused-argument)
optimization/genetic_optimizer.py:564:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
optimization/genetic_optimizer.py:548:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
optimization/genetic_optimizer.py:548:41: W0613: Unused argument 'param_name' (unused-argument)
optimization/genetic_optimizer.py:646:12: W0621: Redefining name 'BacktestResult' from outer scope (line 16) (redefined-outer-name)
optimization/genetic_optimizer.py:657:15: W0718: Catching too general exception Exception (broad-exception-caught)
optimization/genetic_optimizer.py:646:12: W0404: Reimport 'BacktestResult' (imported line 16) (reimported)
optimization/genetic_optimizer.py:646:12: C0415: Import outside toplevel (project.backtesting.backtester.BacktestResult) (import-outside-toplevel)
optimization/genetic_optimizer.py:825:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
optimization/genetic_optimizer.py:825:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
optimization/genetic_optimizer.py:810:4: R0912: Too many branches (17/12) (too-many-branches)
optimization/genetic_optimizer.py:924:15: W0718: Catching too general exception Exception (broad-exception-caught)
optimization/genetic_optimizer.py:947:19: W0718: Catching too general exception Exception (broad-exception-caught)
optimization/genetic_optimizer.py:978:19: W0718: Catching too general exception Exception (broad-exception-caught)
optimization/genetic_optimizer.py:950:48: W0613: Unused argument 'progress' (unused-argument)
optimization/genetic_optimizer.py:950:65: W0613: Unused argument 'info' (unused-argument)
optimization/genetic_optimizer.py:10:0: C0411: standard import "uuid" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
optimization/genetic_optimizer.py:11:0: C0411: standard import "copy.deepcopy" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
optimization/genetic_optimizer.py:12:0: C0411: standard import "traceback" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
optimization/genetic_optimizer.py:13:0: C0411: standard import "os" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
optimization/genetic_optimizer.py:2:0: W0611: Unused import logging (unused-import)
optimization/genetic_optimizer.py:5:0: W0611: Unused import json (unused-import)
optimization/genetic_optimizer.py:6:0: W0611: Unused Optional imported from typing (unused-import)
optimization/genetic_optimizer.py:6:0: W0611: Unused Tuple imported from typing (unused-import)
optimization/genetic_optimizer.py:6:0: W0611: Unused Union imported from typing (unused-import)
optimization/genetic_optimizer.py:6:0: W0611: Unused Set imported from typing (unused-import)
optimization/genetic_optimizer.py:13:0: W0611: Unused import os (unused-import)
optimization/genetic_optimizer.py:17:0: W0611: Unused StrategyRegistry imported from project.trading.strategy_base (unused-import)
************* Module project.api.rest_api
api/rest_api.py:202:0: C0301: Line too long (101/100) (line-too-long)
api/rest_api.py:532:0: C0301: Line too long (104/100) (line-too-long)
api/rest_api.py:565:0: C0301: Line too long (109/100) (line-too-long)
api/rest_api.py:594:0: C0301: Line too long (104/100) (line-too-long)
api/rest_api.py:667:0: C0301: Line too long (104/100) (line-too-long)
api/rest_api.py:670:0: C0301: Line too long (109/100) (line-too-long)
api/rest_api.py:681:0: C0301: Line too long (123/100) (line-too-long)
api/rest_api.py:15:0: E0401: Unable to import 'aiohttp' (import-error)
api/rest_api.py:16:0: E0401: Unable to import 'jwt' (import-error)
api/rest_api.py:23:0: E0401: Unable to import 'project.bots.bot_manager' (import-error)
api/rest_api.py:23:0: E0611: No name 'bot_manager' in module 'project.bots' (no-name-in-module)
api/rest_api.py:26:0: E0611: No name 'send_trading_signal' in module 'project.utils.notify' (no-name-in-module)
api/rest_api.py:31:0: C0103: Constant name "market_data" doesn't conform to UPPER_CASE naming style (invalid-name)
api/rest_api.py:32:0: C0103: Constant name "order_executor" doesn't conform to UPPER_CASE naming style (invalid-name)
api/rest_api.py:34:0: C0103: Constant name "strategy_manager" doesn't conform to UPPER_CASE naming style (invalid-name)
api/rest_api.py:35:0: C0103: Constant name "arbitrage_core" doesn't conform to UPPER_CASE naming style (invalid-name)
api/rest_api.py:46:0: C0116: Missing function or method docstring (missing-function-docstring)
api/rest_api.py:71:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:72:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:118:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:119:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:151:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:152:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:178:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:179:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:218:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:219:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:279:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:280:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:299:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:300:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:342:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:343:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:375:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:376:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:350:20: W0613: Unused argument 'request' (unused-argument)
api/rest_api.py:400:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:401:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:419:8: W0621: Redefining name 'config' from outer scope (line 36) (redefined-outer-name)
api/rest_api.py:446:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:447:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:475:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:476:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:497:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:498:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:483:26: W0613: Unused argument 'request' (unused-argument)
api/rest_api.py:520:8: W0621: Redefining name 'config' from outer scope (line 36) (redefined-outer-name)
api/rest_api.py:544:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:545:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:573:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:574:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:598:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:599:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:641:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:642:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:706:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/rest_api.py:707:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:647:0: R0911: Too many return statements (7/6) (too-many-return-statements)
api/rest_api.py:713:0: C0116: Missing function or method docstring (missing-function-docstring)
api/rest_api.py:732:4: W0104: Statement seems to have no effect (pointless-statement)
api/rest_api.py:733:0: E0602: Undefined variable 'app' (undefined-variable)
api/rest_api.py:734:0: E0602: Undefined variable 'app' (undefined-variable)
api/rest_api.py:735:0: E0602: Undefined variable 'app' (undefined-variable)
api/rest_api.py:736:0: E0602: Undefined variable 'app' (undefined-variable)
api/rest_api.py:739:0: E0602: Undefined variable 'app' (undefined-variable)
api/rest_api.py:740:0: E0602: Undefined variable 'app' (undefined-variable)
api/rest_api.py:741:0: E0602: Undefined variable 'app' (undefined-variable)
api/rest_api.py:742:0: E0602: Undefined variable 'app' (undefined-variable)
api/rest_api.py:745:0: E0602: Undefined variable 'app' (undefined-variable)
api/rest_api.py:746:0: E0602: Undefined variable 'app' (undefined-variable)
api/rest_api.py:753:0: W0101: Unreachable code (unreachable)
api/rest_api.py:748:0: E0104: Return outside function (return-outside-function)
api/rest_api.py:748:7: E0602: Undefined variable 'app' (undefined-variable)
api/rest_api.py:767:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/rest_api.py:7:0: W0611: Unused import logging (unused-import)
api/rest_api.py:8:0: W0611: Unused import asyncio (unused-import)
api/rest_api.py:9:0: W0611: Unused import json (unused-import)
api/rest_api.py:10:0: W0611: Unused import datetime (unused-import)
api/rest_api.py:12:0: W0611: Unused Dict imported from typing (unused-import)
api/rest_api.py:12:0: W0611: Unused List imported from typing (unused-import)
api/rest_api.py:12:0: W0611: Unused Any imported from typing (unused-import)
api/rest_api.py:12:0: W0611: Unused Optional imported from typing (unused-import)
api/rest_api.py:12:0: W0611: Unused Union imported from typing (unused-import)
api/rest_api.py:12:0: W0611: Unused Tuple imported from typing (unused-import)
api/rest_api.py:20:0: W0611: Unused async_handle_error imported from project.utils.error_handler (unused-import)
************* Module project.api.websocket
api/websocket.py:12:0: E0401: Unable to import 'aiohttp' (import-error)
api/websocket.py:13:0: E0401: Unable to import 'aiohttp' (import-error)
api/websocket.py:14:0: E0401: Unable to import 'jwt' (import-error)
api/websocket.py:20:0: E0401: Unable to import 'project.bots.bot_manager' (import-error)
api/websocket.py:20:0: E0611: No name 'bot_manager' in module 'project.bots' (no-name-in-module)
api/websocket.py:26:0: C0103: Constant name "market_data" doesn't conform to UPPER_CASE naming style (invalid-name)
api/websocket.py:28:0: C0103: Constant name "strategy_manager" doesn't conform to UPPER_CASE naming style (invalid-name)
api/websocket.py:105:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/websocket.py:106:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket.py:191:23: W0718: Catching too general exception Exception (broad-exception-caught)
api/websocket.py:192:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket.py:202:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket.py:208:8: C0206: Consider iterating with .items() (consider-using-dict-items)
api/websocket.py:317:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket.py:336:15: W0718: Catching too general exception Exception (broad-exception-caught)
api/websocket.py:337:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket.py:343:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket.py:381:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/websocket.py:382:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket.py:429:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/websocket.py:430:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket.py:459:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/websocket.py:460:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket.py:496:11: W0718: Catching too general exception Exception (broad-exception-caught)
api/websocket.py:469:8: C0415: Import outside toplevel (psutil) (import-outside-toplevel)
api/websocket.py:497:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
api/websocket.py:526:8: C0206: Consider iterating with .items() (consider-using-dict-items)
api/websocket.py:6:0: W0611: Unused import logging (unused-import)
api/websocket.py:10:0: W0611: Unused List imported from typing (unused-import)
api/websocket.py:10:0: W0611: Unused Callable imported from typing (unused-import)
api/websocket.py:18:0: W0611: Unused async_handle_error imported from project.utils.error_handler (unused-import)
************* Module project.bots.base_bot
bots/base_bot.py:16:0: E0611: No name 'send_trading_signal' in module 'project.utils.notify' (no-name-in-module)
bots/base_bot.py:37:0: R0902: Too many instance attributes (14/7) (too-many-instance-attributes)
bots/base_bot.py:80:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:91:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:94:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:111:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/base_bot.py:106:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:112:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:124:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:127:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:141:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/base_bot.py:142:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:145:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:158:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:161:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:176:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:179:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:264:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/base_bot.py:255:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:265:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:302:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/base_bot.py:282:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:303:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:321:8: W0107: Unnecessary pass statement (unnecessary-pass)
bots/base_bot.py:331:8: W0107: Unnecessary pass statement (unnecessary-pass)
bots/base_bot.py:344:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/base_bot.py:345:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:376:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/base_bot.py:352:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:365:27: W0718: Catching too general exception Exception (broad-exception-caught)
bots/base_bot.py:366:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:374:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:377:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/base_bot.py:385:8: W0107: Unnecessary pass statement (unnecessary-pass)
bots/base_bot.py:7:0: W0611: Unused import logging (unused-import)
bots/base_bot.py:10:0: W0611: Unused Optional imported from typing (unused-import)
bots/base_bot.py:10:0: W0611: Unused Union imported from typing (unused-import)
bots/base_bot.py:10:0: W0611: Unused Tuple imported from typing (unused-import)
bots/base_bot.py:15:0: W0611: Unused async_with_retry imported from project.utils.error_handler (unused-import)
************* Module project.bots.arbitrage.multi_exchange
bots/arbitrage/multi_exchange.py:189:0: C0301: Line too long (103/100) (line-too-long)
bots/arbitrage/multi_exchange.py:16:0: E0611: No name 'send_trading_signal' in module 'project.utils.notify' (no-name-in-module)
bots/arbitrage/multi_exchange.py:24:0: R0902: Too many instance attributes (12/7) (too-many-instance-attributes)
bots/arbitrage/multi_exchange.py:108:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/arbitrage/multi_exchange.py:101:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:109:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:138:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/arbitrage/multi_exchange.py:139:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:127:16: W0612: Unused variable 'symbol' (unused-variable)
bots/arbitrage/multi_exchange.py:150:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:155:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:205:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/arbitrage/multi_exchange.py:166:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:170:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:186:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:203:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:206:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:292:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/arbitrage/multi_exchange.py:223:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:233:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:283:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:293:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:330:12: W0612: Unused variable 'symbol' (unused-variable)
bots/arbitrage/multi_exchange.py:361:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:376:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/arbitrage/multi_exchange.py:372:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:377:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:391:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:413:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/arbitrage/multi_exchange.py:409:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:414:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:428:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:432:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:443:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/arbitrage/multi_exchange.py:439:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:444:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:458:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:477:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/arbitrage/multi_exchange.py:468:20: R1714: Consider merging these comparisons with 'in' by using 'exchange in (opportunity.buy_exchange, opportunity.sell_exchange)'. Use a set instead if elements are hashable. (consider-using-in)
bots/arbitrage/multi_exchange.py:473:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:478:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:517:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/arbitrage/multi_exchange.py:499:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:504:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:508:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:513:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:518:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/multi_exchange.py:8:0: W0611: Unused import logging (unused-import)
bots/arbitrage/multi_exchange.py:10:0: W0611: Unused Union imported from typing (unused-import)
bots/arbitrage/multi_exchange.py:10:0: W0611: Unused Tuple imported from typing (unused-import)
bots/arbitrage/multi_exchange.py:10:0: W0611: Unused Set imported from typing (unused-import)
bots/arbitrage/multi_exchange.py:11:0: W0611: Unused dataclass imported from dataclasses (unused-import)
bots/arbitrage/multi_exchange.py:15:0: W0611: Unused async_with_retry imported from project.utils.error_handler (unused-import)
bots/arbitrage/multi_exchange.py:16:0: W0611: Unused send_trading_signal imported from project.utils.notify (unused-import)
bots/arbitrage/multi_exchange.py:18:0: W0611: Unused fetch_ticker imported from project.utils.ccxt_exchanges (unused-import)
bots/arbitrage/multi_exchange.py:18:0: W0611: Unused fetch_order_book imported from project.utils.ccxt_exchanges (unused-import)
bots/arbitrage/multi_exchange.py:18:0: W0611: Unused fetch_balance imported from project.utils.ccxt_exchanges (unused-import)
************* Module project.bots.arbitrage.utils
bots/arbitrage/utils.py:8:0: E0401: Unable to import 'pandas' (import-error)
bots/arbitrage/utils.py:9:0: E0401: Unable to import 'numpy' (import-error)
bots/arbitrage/utils.py:38:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/utils.py:270:0: R0914: Too many local variables (19/15) (too-many-locals)
bots/arbitrage/utils.py:300:14: W0612: Unused variable 'quote' (unused-variable)
bots/arbitrage/utils.py:10:0: C0411: standard import "typing.Dict" should be placed before third party imports "pandas", "numpy" (wrong-import-order)
bots/arbitrage/utils.py:6:0: W0611: Unused import logging (unused-import)
bots/arbitrage/utils.py:7:0: W0611: Unused import time (unused-import)
bots/arbitrage/utils.py:9:0: W0611: Unused numpy imported as np (unused-import)
bots/arbitrage/utils.py:10:0: W0611: Unused Optional imported from typing (unused-import)
bots/arbitrage/utils.py:10:0: W0611: Unused Union imported from typing (unused-import)
bots/arbitrage/utils.py:10:0: W0611: Unused Tuple imported from typing (unused-import)
************* Module project.bots.arbitrage.core
bots/arbitrage/core.py:287:0: C0301: Line too long (115/100) (line-too-long)
bots/arbitrage/core.py:299:0: C0301: Line too long (101/100) (line-too-long)
bots/arbitrage/core.py:512:0: C0301: Line too long (113/100) (line-too-long)
bots/arbitrage/core.py:545:0: C0301: Line too long (114/100) (line-too-long)
bots/arbitrage/core.py:696:0: C0301: Line too long (110/100) (line-too-long)
bots/arbitrage/core.py:708:0: C0301: Line too long (104/100) (line-too-long)
bots/arbitrage/core.py:9:0: E0401: Unable to import 'pandas' (import-error)
bots/arbitrage/core.py:10:0: E0401: Unable to import 'numpy' (import-error)
bots/arbitrage/core.py:17:0: E0611: No name 'send_trading_signal' in module 'project.utils.notify' (no-name-in-module)
bots/arbitrage/core.py:25:0: R0902: Too many instance attributes (15/7) (too-many-instance-attributes)
bots/arbitrage/core.py:47:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
bots/arbitrage/core.py:98:4: R0914: Too many local variables (22/15) (too-many-locals)
bots/arbitrage/core.py:150:23: W0718: Catching too general exception Exception (broad-exception-caught)
bots/arbitrage/core.py:151:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:205:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:98:4: R0912: Too many branches (15/12) (too-many-branches)
bots/arbitrage/core.py:286:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:297:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:371:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/arbitrage/core.py:344:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
bots/arbitrage/core.py:356:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:365:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:372:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:264:4: R0911: Too many return statements (7/6) (too-many-return-statements)
bots/arbitrage/core.py:378:4: R0914: Too many local variables (16/15) (too-many-locals)
bots/arbitrage/core.py:466:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/arbitrage/core.py:395:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:414:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:421:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:435:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:455:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:467:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:378:4: R0911: Too many return statements (7/6) (too-many-return-statements)
bots/arbitrage/core.py:486:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:493:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:585:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/arbitrage/core.py:502:30: E1120: No value for argument 'type' in function call (no-value-for-parameter)
bots/arbitrage/core.py:511:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:535:31: E1120: No value for argument 'type' in function call (no-value-for-parameter)
bots/arbitrage/core.py:544:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:576:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:586:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:593:4: R0914: Too many local variables (27/15) (too-many-locals)
bots/arbitrage/core.py:607:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:718:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/arbitrage/core.py:621:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:652:35: R1714: Consider merging these comparisons with 'in' by using 'symbol in (direct_pair, reverse_pair)'. Use a set instead if elements are hashable. (consider-using-in)
bots/arbitrage/core.py:614:8: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
bots/arbitrage/core.py:707:36: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:719:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:593:4: R0912: Too many branches (18/12) (too-many-branches)
bots/arbitrage/core.py:738:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:739:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:740:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:741:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:742:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/arbitrage/core.py:11:0: C0411: standard import "typing.Dict" should be placed before third party imports "pandas", "numpy" (wrong-import-order)
bots/arbitrage/core.py:12:0: C0411: standard import "dataclasses.dataclass" should be placed before third party imports "pandas", "numpy" (wrong-import-order)
bots/arbitrage/core.py:7:0: W0611: Unused import logging (unused-import)
bots/arbitrage/core.py:9:0: W0611: Unused pandas imported as pd (unused-import)
bots/arbitrage/core.py:10:0: W0611: Unused numpy imported as np (unused-import)
bots/arbitrage/core.py:11:0: W0611: Unused Optional imported from typing (unused-import)
bots/arbitrage/core.py:11:0: W0611: Unused Union imported from typing (unused-import)
bots/arbitrage/core.py:11:0: W0611: Unused Tuple imported from typing (unused-import)
bots/arbitrage/core.py:11:0: W0611: Unused Set imported from typing (unused-import)
bots/arbitrage/core.py:16:0: W0611: Unused async_with_retry imported from project.utils.error_handler (unused-import)
************* Module project.bots.strategies.mean_revision
bots/strategies/mean_revision.py:354:0: C0301: Line too long (103/100) (line-too-long)
bots/strategies/mean_revision.py:9:0: E0401: Unable to import 'pandas' (import-error)
bots/strategies/mean_revision.py:10:0: E0401: Unable to import 'numpy' (import-error)
bots/strategies/mean_revision.py:17:0: E0401: Unable to import 'project.technicals.indicators' (import-error)
bots/strategies/mean_revision.py:17:0: E0611: No name 'technicals' in module 'project' (no-name-in-module)
bots/strategies/mean_revision.py:28:4: R0913: Too many arguments (6/5) (too-many-arguments)
bots/strategies/mean_revision.py:28:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
bots/strategies/mean_revision.py:96:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/mean_revision.py:164:8: W0107: Unnecessary pass statement (unnecessary-pass)
bots/strategies/mean_revision.py:210:23: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/mean_revision.py:180:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/mean_revision.py:205:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/mean_revision.py:211:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/mean_revision.py:353:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/mean_revision.py:361:4: R0914: Too many local variables (19/15) (too-many-locals)
bots/strategies/mean_revision.py:453:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/mean_revision.py:388:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/mean_revision.py:394:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/mean_revision.py:454:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/mean_revision.py:361:4: R0912: Too many branches (16/12) (too-many-branches)
bots/strategies/mean_revision.py:458:4: R0913: Too many arguments (6/5) (too-many-arguments)
bots/strategies/mean_revision.py:458:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
bots/strategies/mean_revision.py:458:4: R0914: Too many local variables (17/15) (too-many-locals)
bots/strategies/mean_revision.py:493:15: R0916: Too many boolean expressions in if statement (6/5) (too-many-boolean-expressions)
bots/strategies/mean_revision.py:543:17: R1714: Consider merging these comparisons with 'in' by using 'signal_direction in (bb_signal, rsi_signal)'. Use a set instead if elements are hashable. (consider-using-in)
bots/strategies/mean_revision.py:11:0: C0411: standard import "typing.Dict" should be placed before third party imports "pandas", "numpy" (wrong-import-order)
bots/strategies/mean_revision.py:6:0: W0611: Unused import asyncio (unused-import)
bots/strategies/mean_revision.py:7:0: W0611: Unused import logging (unused-import)
bots/strategies/mean_revision.py:11:0: W0611: Unused Union imported from typing (unused-import)
bots/strategies/mean_revision.py:11:0: W0611: Unused Tuple imported from typing (unused-import)
bots/strategies/mean_revision.py:11:0: W0611: Unused Set imported from typing (unused-import)
bots/strategies/mean_revision.py:13:0: W0611: Unused get_config imported from project.config (unused-import)
bots/strategies/mean_revision.py:16:0: W0611: Unused MarketData imported from project.data.market_data (unused-import)
bots/strategies/mean_revision.py:18:0: W0611: Unused StrategyStatus imported from project.bots.strategies.base_strategy (unused-import)
************* Module project.bots.strategies.memcoin
bots/strategies/memcoin.py:330:0: C0301: Line too long (114/100) (line-too-long)
bots/strategies/memcoin.py:9:0: E0401: Unable to import 'pandas' (import-error)
bots/strategies/memcoin.py:10:0: E0401: Unable to import 'numpy' (import-error)
bots/strategies/memcoin.py:17:0: E0401: Unable to import 'project.technicals.indicators' (import-error)
bots/strategies/memcoin.py:17:0: E0611: No name 'technicals' in module 'project' (no-name-in-module)
bots/strategies/memcoin.py:28:4: R0913: Too many arguments (6/5) (too-many-arguments)
bots/strategies/memcoin.py:28:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
bots/strategies/memcoin.py:87:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/memcoin.py:150:8: W0107: Unnecessary pass statement (unnecessary-pass)
bots/strategies/memcoin.py:173:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/memcoin.py:171:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/memcoin.py:174:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/memcoin.py:289:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/memcoin.py:260:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/memcoin.py:287:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/memcoin.py:290:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/memcoin.py:334:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/memcoin.py:329:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/memcoin.py:335:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/memcoin.py:304:8: W0612: Unused variable 'base_coin' (unused-variable)
bots/strategies/memcoin.py:338:4: R0914: Too many local variables (18/15) (too-many-locals)
bots/strategies/memcoin.py:439:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/memcoin.py:440:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/memcoin.py:444:4: R0913: Too many arguments (8/5) (too-many-arguments)
bots/strategies/memcoin.py:444:4: R0917: Too many positional arguments (8/5) (too-many-positional-arguments)
bots/strategies/memcoin.py:569:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/memcoin.py:589:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/memcoin.py:11:0: C0411: standard import "typing.Dict" should be placed before third party imports "pandas", "numpy" (wrong-import-order)
bots/strategies/memcoin.py:6:0: W0611: Unused import asyncio (unused-import)
bots/strategies/memcoin.py:7:0: W0611: Unused import logging (unused-import)
bots/strategies/memcoin.py:9:0: W0611: Unused pandas imported as pd (unused-import)
bots/strategies/memcoin.py:11:0: W0611: Unused Union imported from typing (unused-import)
bots/strategies/memcoin.py:11:0: W0611: Unused Tuple imported from typing (unused-import)
bots/strategies/memcoin.py:11:0: W0611: Unused Set imported from typing (unused-import)
bots/strategies/memcoin.py:13:0: W0611: Unused get_config imported from project.config (unused-import)
bots/strategies/memcoin.py:16:0: W0611: Unused MarketData imported from project.data.market_data (unused-import)
bots/strategies/memcoin.py:18:0: W0611: Unused StrategyStatus imported from project.bots.strategies.base_strategy (unused-import)
************* Module project.bots.strategies.volatility_strategy
bots/strategies/volatility_strategy.py:237:0: C0301: Line too long (108/100) (line-too-long)
bots/strategies/volatility_strategy.py:9:0: E0401: Unable to import 'pandas' (import-error)
bots/strategies/volatility_strategy.py:10:0: E0401: Unable to import 'numpy' (import-error)
bots/strategies/volatility_strategy.py:17:0: E0401: Unable to import 'project.technicals.indicators' (import-error)
bots/strategies/volatility_strategy.py:17:0: E0611: No name 'technicals' in module 'project' (no-name-in-module)
bots/strategies/volatility_strategy.py:18:0: E0401: Unable to import 'project.technicals.patterns' (import-error)
bots/strategies/volatility_strategy.py:18:0: E0611: No name 'technicals' in module 'project' (no-name-in-module)
bots/strategies/volatility_strategy.py:30:4: R0913: Too many arguments (6/5) (too-many-arguments)
bots/strategies/volatility_strategy.py:30:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
bots/strategies/volatility_strategy.py:89:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/volatility_strategy.py:91:4: R0912: Too many branches (13/12) (too-many-branches)
bots/strategies/volatility_strategy.py:181:8: W0107: Unnecessary pass statement (unnecessary-pass)
bots/strategies/volatility_strategy.py:184:4: R0914: Too many local variables (26/15) (too-many-locals)
bots/strategies/volatility_strategy.py:293:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/volatility_strategy.py:199:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/volatility_strategy.py:294:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/volatility_strategy.py:320:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/volatility_strategy.py:316:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/volatility_strategy.py:321:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/volatility_strategy.py:414:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/volatility_strategy.py:368:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/volatility_strategy.py:374:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/volatility_strategy.py:415:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/volatility_strategy.py:324:4: R0912: Too many branches (14/12) (too-many-branches)
bots/strategies/volatility_strategy.py:516:20: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
bots/strategies/volatility_strategy.py:581:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/volatility_strategy.py:602:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/volatility_strategy.py:11:0: C0411: standard import "typing.Dict" should be placed before third party imports "pandas", "numpy" (wrong-import-order)
bots/strategies/volatility_strategy.py:6:0: W0611: Unused import asyncio (unused-import)
bots/strategies/volatility_strategy.py:7:0: W0611: Unused import logging (unused-import)
bots/strategies/volatility_strategy.py:10:0: W0611: Unused numpy imported as np (unused-import)
bots/strategies/volatility_strategy.py:11:0: W0611: Unused Union imported from typing (unused-import)
bots/strategies/volatility_strategy.py:11:0: W0611: Unused Tuple imported from typing (unused-import)
bots/strategies/volatility_strategy.py:11:0: W0611: Unused Set imported from typing (unused-import)
bots/strategies/volatility_strategy.py:13:0: W0611: Unused get_config imported from project.config (unused-import)
bots/strategies/volatility_strategy.py:16:0: W0611: Unused MarketData imported from project.data.market_data (unused-import)
bots/strategies/volatility_strategy.py:18:0: W0611: Unused Patterns imported from project.technicals.patterns (unused-import)
bots/strategies/volatility_strategy.py:19:0: W0611: Unused StrategyStatus imported from project.bots.strategies.base_strategy (unused-import)
************* Module project.bots.strategies.strategy_manager
bots/strategies/strategy_manager.py:17:0: E0611: No name 'send_trading_signal' in module 'project.utils.notify' (no-name-in-module)
bots/strategies/strategy_manager.py:52:4: R0914: Too many local variables (16/15) (too-many-locals)
bots/strategies/strategy_manager.py:91:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/strategy_manager.py:58:12: C0415: Import outside toplevel (project.bots.strategies.main_strategy.MainStrategy) (import-outside-toplevel)
bots/strategies/strategy_manager.py:59:12: C0415: Import outside toplevel (project.bots.strategies.volatility_strategy.VolatilityStrategy) (import-outside-toplevel)
bots/strategies/strategy_manager.py:60:12: C0415: Import outside toplevel (project.bots.strategies.scalping.ScalpingStrategy) (import-outside-toplevel)
bots/strategies/strategy_manager.py:61:12: C0415: Import outside toplevel (project.bots.strategies.memcoin.MemcoinStrategy) (import-outside-toplevel)
bots/strategies/strategy_manager.py:62:0: E0001: Cannot import 'project.bots.strategies.cross' due to 'unexpected indent (project.bots.strategies.cross, line 123)' (syntax-error)
bots/strategies/strategy_manager.py:62:12: C0415: Import outside toplevel (project.bots.strategies.cross.CrossStrategy) (import-outside-toplevel)
bots/strategies/strategy_manager.py:62:12: E0611: No name 'cross' in module 'project.bots.strategies' (no-name-in-module)
bots/strategies/strategy_manager.py:63:12: C0415: Import outside toplevel (project.bots.strategies.futures.FuturesStrategy) (import-outside-toplevel)
bots/strategies/strategy_manager.py:64:12: C0415: Import outside toplevel (project.bots.strategies.mean_revision.MeanReversionStrategy) (import-outside-toplevel)
bots/strategies/strategy_manager.py:84:23: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/strategy_manager.py:85:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:89:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:92:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:104:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:111:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:122:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:197:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:214:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:223:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:229:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:246:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:255:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:271:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:280:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:299:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:308:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:326:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:357:23: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/strategy_manager.py:358:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:378:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/strategy_manager.py:377:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:379:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/strategy_manager.py:6:0: W0611: Unused import asyncio (unused-import)
bots/strategies/strategy_manager.py:7:0: W0611: Unused import logging (unused-import)
bots/strategies/strategy_manager.py:8:0: W0611: Unused import uuid (unused-import)
bots/strategies/strategy_manager.py:10:0: W0611: Unused import inspect (unused-import)
bots/strategies/strategy_manager.py:11:0: W0611: Unused Optional imported from typing (unused-import)
bots/strategies/strategy_manager.py:11:0: W0611: Unused Union imported from typing (unused-import)
bots/strategies/strategy_manager.py:11:0: W0611: Unused Tuple imported from typing (unused-import)
bots/strategies/strategy_manager.py:11:0: W0611: Unused Set imported from typing (unused-import)
************* Module project.bots.strategies.main_strategy
bots/strategies/main_strategy.py:9:0: E0401: Unable to import 'pandas' (import-error)
bots/strategies/main_strategy.py:10:0: E0401: Unable to import 'numpy' (import-error)
bots/strategies/main_strategy.py:17:0: E0401: Unable to import 'project.technicals.indicators' (import-error)
bots/strategies/main_strategy.py:17:0: E0611: No name 'technicals' in module 'project' (no-name-in-module)
bots/strategies/main_strategy.py:18:0: E0401: Unable to import 'project.technicals.patterns' (import-error)
bots/strategies/main_strategy.py:18:0: E0611: No name 'technicals' in module 'project' (no-name-in-module)
bots/strategies/main_strategy.py:29:4: R0913: Too many arguments (6/5) (too-many-arguments)
bots/strategies/main_strategy.py:29:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
bots/strategies/main_strategy.py:88:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/main_strategy.py:90:4: R0912: Too many branches (16/12) (too-many-branches)
bots/strategies/main_strategy.py:179:8: W0107: Unnecessary pass statement (unnecessary-pass)
bots/strategies/main_strategy.py:182:4: R0914: Too many local variables (19/15) (too-many-locals)
bots/strategies/main_strategy.py:302:23: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/main_strategy.py:195:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/main_strategy.py:303:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/main_strategy.py:343:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/main_strategy.py:344:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/main_strategy.py:393:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/main_strategy.py:394:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/main_strategy.py:398:4: R0914: Too many local variables (20/15) (too-many-locals)
bots/strategies/main_strategy.py:556:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/main_strategy.py:557:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/main_strategy.py:398:4: R0912: Too many branches (39/12) (too-many-branches)
bots/strategies/main_strategy.py:398:4: R0915: Too many statements (77/50) (too-many-statements)
bots/strategies/main_strategy.py:562:4: R0914: Too many local variables (26/15) (too-many-locals)
bots/strategies/main_strategy.py:674:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/main_strategy.py:675:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/main_strategy.py:562:4: R0912: Too many branches (18/12) (too-many-branches)
bots/strategies/main_strategy.py:11:0: C0411: standard import "typing.Dict" should be placed before third party imports "pandas", "numpy" (wrong-import-order)
bots/strategies/main_strategy.py:6:0: W0611: Unused import asyncio (unused-import)
bots/strategies/main_strategy.py:7:0: W0611: Unused import logging (unused-import)
bots/strategies/main_strategy.py:10:0: W0611: Unused numpy imported as np (unused-import)
bots/strategies/main_strategy.py:11:0: W0611: Unused Optional imported from typing (unused-import)
bots/strategies/main_strategy.py:11:0: W0611: Unused Union imported from typing (unused-import)
bots/strategies/main_strategy.py:11:0: W0611: Unused Tuple imported from typing (unused-import)
bots/strategies/main_strategy.py:11:0: W0611: Unused Set imported from typing (unused-import)
bots/strategies/main_strategy.py:13:0: W0611: Unused get_config imported from project.config (unused-import)
bots/strategies/main_strategy.py:16:0: W0611: Unused MarketData imported from project.data.market_data (unused-import)
bots/strategies/main_strategy.py:19:0: W0611: Unused StrategyStatus imported from project.bots.strategies.base_strategy (unused-import)
************* Module project.bots.strategies.scalping
bots/strategies/scalping.py:9:0: E0401: Unable to import 'pandas' (import-error)
bots/strategies/scalping.py:10:0: E0401: Unable to import 'numpy' (import-error)
bots/strategies/scalping.py:17:0: E0401: Unable to import 'project.technicals.indicators' (import-error)
bots/strategies/scalping.py:17:0: E0611: No name 'technicals' in module 'project' (no-name-in-module)
bots/strategies/scalping.py:28:4: R0913: Too many arguments (6/5) (too-many-arguments)
bots/strategies/scalping.py:28:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
bots/strategies/scalping.py:85:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/scalping.py:145:8: W0107: Unnecessary pass statement (unnecessary-pass)
bots/strategies/scalping.py:163:23: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/scalping.py:164:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/scalping.py:234:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/scalping.py:200:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/scalping.py:235:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/scalping.py:240:4: R0914: Too many local variables (19/15) (too-many-locals)
bots/strategies/scalping.py:343:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/scalping.py:290:16: R0916: Too many boolean expressions in if statement (6/5) (too-many-boolean-expressions)
bots/strategies/scalping.py:344:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/scalping.py:382:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
bots/strategies/scalping.py:429:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/scalping.py:422:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
bots/strategies/scalping.py:430:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/scalping.py:433:4: R0914: Too many local variables (20/15) (too-many-locals)
bots/strategies/scalping.py:433:4: R0912: Too many branches (19/12) (too-many-branches)
bots/strategies/scalping.py:469:16: W0612: Unused variable 'indicator' (unused-variable)
bots/strategies/scalping.py:555:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/scalping.py:11:0: C0411: standard import "typing.Dict" should be placed before third party imports "pandas", "numpy" (wrong-import-order)
bots/strategies/scalping.py:6:0: W0611: Unused import asyncio (unused-import)
bots/strategies/scalping.py:7:0: W0611: Unused import logging (unused-import)
bots/strategies/scalping.py:9:0: W0611: Unused pandas imported as pd (unused-import)
bots/strategies/scalping.py:10:0: W0611: Unused numpy imported as np (unused-import)
bots/strategies/scalping.py:11:0: W0611: Unused Union imported from typing (unused-import)
bots/strategies/scalping.py:11:0: W0611: Unused Tuple imported from typing (unused-import)
bots/strategies/scalping.py:11:0: W0611: Unused Set imported from typing (unused-import)
bots/strategies/scalping.py:13:0: W0611: Unused get_config imported from project.config (unused-import)
bots/strategies/scalping.py:16:0: W0611: Unused MarketData imported from project.data.market_data (unused-import)
bots/strategies/scalping.py:18:0: W0611: Unused StrategyStatus imported from project.bots.strategies.base_strategy (unused-import)
************* Module project.bots.strategies.base_strategy
bots/strategies/base_strategy.py:396:0: C0301: Line too long (101/100) (line-too-long)
bots/strategies/base_strategy.py:673:0: C0301: Line too long (122/100) (line-too-long)
bots/strategies/base_strategy.py:720:0: C0301: Line too long (111/100) (line-too-long)
bots/strategies/base_strategy.py:1:0: C0302: Too many lines in module (1093/1000) (too-many-lines)
bots/strategies/base_strategy.py:17:0: E0611: No name 'send_trading_signal' in module 'project.utils.notify' (no-name-in-module)
bots/strategies/base_strategy.py:19:0: E0401: Unable to import 'project.technicals.indicators' (import-error)
bots/strategies/base_strategy.py:19:0: E0611: No name 'technicals' in module 'project' (no-name-in-module)
bots/strategies/base_strategy.py:39:0: R0902: Too many instance attributes (26/7) (too-many-instance-attributes)
bots/strategies/base_strategy.py:44:4: R0913: Too many arguments (6/5) (too-many-arguments)
bots/strategies/base_strategy.py:44:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
bots/strategies/base_strategy.py:118:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:131:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:134:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:151:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/base_strategy.py:146:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:152:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:164:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:167:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:181:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/base_strategy.py:182:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:185:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:198:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:203:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:218:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:223:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:350:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/base_strategy.py:302:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:351:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:291:4: R0912: Too many branches (13/12) (too-many-branches)
bots/strategies/base_strategy.py:414:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/base_strategy.py:374:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:382:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:388:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:395:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:401:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
bots/strategies/base_strategy.py:411:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:415:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:357:4: R0911: Too many return statements (8/6) (too-many-return-statements)
bots/strategies/base_strategy.py:439:23: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/base_strategy.py:440:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:451:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/base_strategy.py:452:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:465:8: W0107: Unnecessary pass statement (unnecessary-pass)
bots/strategies/base_strategy.py:473:8: W0107: Unnecessary pass statement (unnecessary-pass)
bots/strategies/base_strategy.py:481:8: W0107: Unnecessary pass statement (unnecessary-pass)
bots/strategies/base_strategy.py:492:8: W0107: Unnecessary pass statement (unnecessary-pass)
bots/strategies/base_strategy.py:509:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/base_strategy.py:510:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:550:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/base_strategy.py:517:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:539:27: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/base_strategy.py:540:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:548:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:551:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:608:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/base_strategy.py:591:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:602:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:609:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:612:4: R0914: Too many local variables (16/15) (too-many-locals)
bots/strategies/base_strategy.py:728:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/base_strategy.py:672:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:616:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
bots/strategies/base_strategy.py:719:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:616:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
bots/strategies/base_strategy.py:726:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:729:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:612:4: R0912: Too many branches (13/12) (too-many-branches)
bots/strategies/base_strategy.py:776:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/base_strategy.py:777:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:902:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/base_strategy.py:797:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:802:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:811:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:816:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:832:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:850:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:871:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:898:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:903:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:780:4: R0911: Too many return statements (8/6) (too-many-return-statements)
bots/strategies/base_strategy.py:1011:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/base_strategy.py:921:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:942:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:964:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:1005:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:1012:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/base_strategy.py:1027:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
bots/strategies/base_strategy.py:1015:35: W0613: Unused argument 'symbol' (unused-argument)
bots/strategies/base_strategy.py:1046:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
bots/strategies/base_strategy.py:1033:14: W0613: Unused argument 'symbol' (unused-argument)
bots/strategies/base_strategy.py:1051:34: W0613: Unused argument 'symbol' (unused-argument)
bots/strategies/base_strategy.py:7:0: W0611: Unused import logging (unused-import)
bots/strategies/base_strategy.py:10:0: W0611: Unused Union imported from typing (unused-import)
bots/strategies/base_strategy.py:10:0: W0611: Unused Tuple imported from typing (unused-import)
bots/strategies/base_strategy.py:10:0: W0611: Unused Set imported from typing (unused-import)
bots/strategies/base_strategy.py:16:0: W0611: Unused async_with_retry imported from project.utils.error_handler (unused-import)
bots/strategies/base_strategy.py:19:0: W0611: Unused Indicators imported from project.technicals.indicators (unused-import)
************* Module project.bots.strategies.futures
bots/strategies/futures.py:9:0: E0401: Unable to import 'pandas' (import-error)
bots/strategies/futures.py:10:0: E0401: Unable to import 'numpy' (import-error)
bots/strategies/futures.py:17:0: E0401: Unable to import 'project.technicals.indicators' (import-error)
bots/strategies/futures.py:17:0: E0611: No name 'technicals' in module 'project' (no-name-in-module)
bots/strategies/futures.py:28:4: R0913: Too many arguments (6/5) (too-many-arguments)
bots/strategies/futures.py:28:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
bots/strategies/futures.py:100:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/futures.py:160:8: W0107: Unnecessary pass statement (unnecessary-pass)
bots/strategies/futures.py:190:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/futures.py:183:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/futures.py:191:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/futures.py:211:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/futures.py:212:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/futures.py:236:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/futures.py:233:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/futures.py:237:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/futures.py:260:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/futures.py:258:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/futures.py:261:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/futures.py:293:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/futures.py:265:58: W0613: Unused argument 'position_size' (unused-argument)
bots/strategies/futures.py:319:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
bots/strategies/futures.py:384:4: R0914: Too many local variables (34/15) (too-many-locals)
bots/strategies/futures.py:602:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/strategies/futures.py:538:32: R1714: Consider merging these comparisons with 'in' by using 'higher_trend not in (final_signal, 'neutral')'. Use a set instead if elements are hashable. (consider-using-in)
bots/strategies/futures.py:396:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
bots/strategies/futures.py:603:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/futures.py:384:4: R0912: Too many branches (23/12) (too-many-branches)
bots/strategies/futures.py:384:4: R0915: Too many statements (75/50) (too-many-statements)
bots/strategies/futures.py:644:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
bots/strategies/futures.py:700:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/futures.py:11:0: C0411: standard import "typing.Dict" should be placed before third party imports "pandas", "numpy" (wrong-import-order)
bots/strategies/futures.py:6:0: W0611: Unused import asyncio (unused-import)
bots/strategies/futures.py:7:0: W0611: Unused import logging (unused-import)
bots/strategies/futures.py:9:0: W0611: Unused pandas imported as pd (unused-import)
bots/strategies/futures.py:11:0: W0611: Unused Union imported from typing (unused-import)
bots/strategies/futures.py:11:0: W0611: Unused Tuple imported from typing (unused-import)
bots/strategies/futures.py:13:0: W0611: Unused get_config imported from project.config (unused-import)
bots/strategies/futures.py:16:0: W0611: Unused MarketData imported from project.data.market_data (unused-import)
bots/strategies/futures.py:18:0: W0611: Unused StrategyStatus imported from project.bots.strategies.base_strategy (unused-import)
************* Module project.bots.strategies.modifications
bots/strategies/modifications.py:6:0: E0401: Unable to import 'numpy' (import-error)
bots/strategies/modifications.py:7:0: E0401: Unable to import 'pandas' (import-error)
bots/strategies/modifications.py:14:0: E0401: Unable to import 'project.technicals.indicators' (import-error)
bots/strategies/modifications.py:14:0: E0611: No name 'technicals' in module 'project' (no-name-in-module)
bots/strategies/modifications.py:26:4: R0913: Too many arguments (6/5) (too-many-arguments)
bots/strategies/modifications.py:26:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
bots/strategies/modifications.py:49:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
bots/strategies/modifications.py:71:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/modifications.py:27:8: W0613: Unused argument 'current_price' (unused-argument)
bots/strategies/modifications.py:76:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
bots/strategies/modifications.py:76:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
bots/strategies/modifications.py:102:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/modifications.py:121:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/modifications.py:127:4: R0913: Too many arguments (6/5) (too-many-arguments)
bots/strategies/modifications.py:127:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
bots/strategies/modifications.py:128:8: W0613: Unused argument 'account_balance' (unused-argument)
bots/strategies/modifications.py:130:8: W0613: Unused argument 'stop_loss_pct' (unused-argument)
bots/strategies/modifications.py:255:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/modifications.py:262:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
bots/strategies/modifications.py:285:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/strategies/modifications.py:355:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
bots/strategies/modifications.py:410:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
bots/strategies/modifications.py:385:12: W0612: Unused variable 'timeframe' (unused-variable)
bots/strategies/modifications.py:386:16: W0612: Unused variable 'indicator' (unused-variable)
bots/strategies/modifications.py:8:0: C0411: standard import "logging" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
bots/strategies/modifications.py:9:0: C0411: standard import "typing.Dict" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
bots/strategies/modifications.py:6:0: W0611: Unused numpy imported as np (unused-import)
bots/strategies/modifications.py:8:0: W0611: Unused import logging (unused-import)
bots/strategies/modifications.py:9:0: W0611: Unused Optional imported from typing (unused-import)
bots/strategies/modifications.py:9:0: W0611: Unused Union imported from typing (unused-import)
bots/strategies/modifications.py:11:0: W0611: Unused get_config imported from project.config (unused-import)
************* Module project.bots.news.news_bot
bots/news/news_bot.py:17:0: E0611: No name 'send_trading_signal' in module 'project.utils.notify' (no-name-in-module)
bots/news/news_bot.py:27:0: R0902: Too many instance attributes (16/7) (too-many-instance-attributes)
bots/news/news_bot.py:172:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:189:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:200:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:238:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/news/news_bot.py:226:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:236:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:239:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:263:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/news/news_bot.py:248:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:254:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:257:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:264:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:267:4: R0914: Too many local variables (17/15) (too-many-locals)
bots/news/news_bot.py:300:19: W0718: Catching too general exception Exception (broad-exception-caught)
bots/news/news_bot.py:298:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:301:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:348:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:349:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:474:21: E1101: Instance of 'NewsBot' has no 'open_positions' member (no-member)
bots/news/news_bot.py:482:15: E1101: Instance of 'NewsBot' has no 'open_positions' member (no-member)
bots/news/news_bot.py:581:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/news/news_bot.py:509:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:514:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:545:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:551:12: E1101: Instance of 'NewsBot' has no 'open_positions' member (no-member)
bots/news/news_bot.py:562:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:582:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:588:4: R0914: Too many local variables (19/15) (too-many-locals)
bots/news/news_bot.py:593:23: E1101: Instance of 'NewsBot' has no 'open_positions' member (no-member)
bots/news/news_bot.py:596:29: E1101: Instance of 'NewsBot' has no 'open_positions' member (no-member)
bots/news/news_bot.py:599:23: E1101: Instance of 'NewsBot' has no 'open_positions' member (no-member)
bots/news/news_bot.py:648:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:690:24: E1101: Instance of 'NewsBot' has no 'open_positions' member (no-member)
bots/news/news_bot.py:708:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:713:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/news_bot.py:588:4: R0912: Too many branches (17/12) (too-many-branches)
bots/news/news_bot.py:588:4: R0915: Too many statements (52/50) (too-many-statements)
bots/news/news_bot.py:727:4: W0221: Number of parameters was 3 in 'BaseBot._update_stats' and is now 2 in overriding 'NewsBot._update_stats' method (arguments-differ)
bots/news/news_bot.py:203:8: W0201: Attribute 'news_task' defined outside __init__ (attribute-defined-outside-init)
bots/news/news_bot.py:7:0: W0611: Unused import logging (unused-import)
bots/news/news_bot.py:9:0: W0611: Unused import re (unused-import)
bots/news/news_bot.py:10:0: W0611: Unused import json (unused-import)
bots/news/news_bot.py:11:0: W0611: Unused Optional imported from typing (unused-import)
bots/news/news_bot.py:11:0: W0611: Unused Union imported from typing (unused-import)
bots/news/news_bot.py:11:0: W0611: Unused Tuple imported from typing (unused-import)
bots/news/news_bot.py:11:0: W0611: Unused Set imported from typing (unused-import)
bots/news/news_bot.py:16:0: W0611: Unused async_with_retry imported from project.utils.error_handler (unused-import)
bots/news/news_bot.py:18:0: W0611: Unused MarketData imported from project.data.market_data (unused-import)
************* Module project.bots.news.parsers.coindesk_parser
bots/news/parsers/coindesk_parser.py:139:0: C0301: Line too long (101/100) (line-too-long)
bots/news/parsers/coindesk_parser.py:6:0: E0401: Unable to import 'aiohttp' (import-error)
bots/news/parsers/coindesk_parser.py:9:0: E0401: Unable to import 'feedparser' (import-error)
bots/news/parsers/coindesk_parser.py:13:0: E0401: Unable to import 'bs4' (import-error)
bots/news/parsers/coindesk_parser.py:17:0: E0611: No name 'aiohttp_session' in module 'project.utils.http_utils' (no-name-in-module)
bots/news/parsers/coindesk_parser.py:39:4: R0914: Too many local variables (17/15) (too-many-locals)
bots/news/parsers/coindesk_parser.py:118:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/news/parsers/coindesk_parser.py:63:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/coindesk_parser.py:86:16: W0702: No exception type(s) specified (bare-except)
bots/news/parsers/coindesk_parser.py:110:16: E0602: Undefined variable 'asyncio' (undefined-variable)
bots/news/parsers/coindesk_parser.py:115:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/coindesk_parser.py:119:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/coindesk_parser.py:161:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/news/parsers/coindesk_parser.py:138:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/coindesk_parser.py:159:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/coindesk_parser.py:162:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/coindesk_parser.py:165:4: R0914: Too many local variables (19/15) (too-many-locals)
bots/news/parsers/coindesk_parser.py:239:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/news/parsers/coindesk_parser.py:184:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/coindesk_parser.py:232:20: E0602: Undefined variable 'asyncio' (undefined-variable)
bots/news/parsers/coindesk_parser.py:234:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/coindesk_parser.py:240:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/coindesk_parser.py:7:0: C0411: standard import "logging" should be placed before third party import "aiohttp" (wrong-import-order)
bots/news/parsers/coindesk_parser.py:8:0: C0411: standard import "time" should be placed before third party import "aiohttp" (wrong-import-order)
bots/news/parsers/coindesk_parser.py:10:0: C0411: standard import "re" should be placed before third party imports "aiohttp", "feedparser" (wrong-import-order)
bots/news/parsers/coindesk_parser.py:11:0: C0411: standard import "typing.Dict" should be placed before third party imports "aiohttp", "feedparser" (wrong-import-order)
bots/news/parsers/coindesk_parser.py:12:0: C0411: standard import "datetime.datetime" should be placed before third party imports "aiohttp", "feedparser" (wrong-import-order)
bots/news/parsers/coindesk_parser.py:6:0: W0611: Unused import aiohttp (unused-import)
bots/news/parsers/coindesk_parser.py:7:0: W0611: Unused import logging (unused-import)
bots/news/parsers/coindesk_parser.py:10:0: W0611: Unused import re (unused-import)
bots/news/parsers/coindesk_parser.py:11:0: W0611: Unused Optional imported from typing (unused-import)
************* Module project.bots.news.parsers.bitcoinmag_parser
bots/news/parsers/bitcoinmag_parser.py:64:0: C0301: Line too long (104/100) (line-too-long)
bots/news/parsers/bitcoinmag_parser.py:139:0: C0301: Line too long (101/100) (line-too-long)
bots/news/parsers/bitcoinmag_parser.py:185:0: C0301: Line too long (104/100) (line-too-long)
bots/news/parsers/bitcoinmag_parser.py:6:0: E0401: Unable to import 'aiohttp' (import-error)
bots/news/parsers/bitcoinmag_parser.py:9:0: E0401: Unable to import 'feedparser' (import-error)
bots/news/parsers/bitcoinmag_parser.py:13:0: E0401: Unable to import 'bs4' (import-error)
bots/news/parsers/bitcoinmag_parser.py:17:0: E0611: No name 'aiohttp_session' in module 'project.utils.http_utils' (no-name-in-module)
bots/news/parsers/bitcoinmag_parser.py:39:4: R0914: Too many local variables (17/15) (too-many-locals)
bots/news/parsers/bitcoinmag_parser.py:118:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/news/parsers/bitcoinmag_parser.py:63:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/bitcoinmag_parser.py:86:16: W0702: No exception type(s) specified (bare-except)
bots/news/parsers/bitcoinmag_parser.py:110:16: E0602: Undefined variable 'asyncio' (undefined-variable)
bots/news/parsers/bitcoinmag_parser.py:115:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/bitcoinmag_parser.py:119:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/bitcoinmag_parser.py:161:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/news/parsers/bitcoinmag_parser.py:138:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/bitcoinmag_parser.py:159:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/bitcoinmag_parser.py:162:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/bitcoinmag_parser.py:165:4: R0914: Too many local variables (19/15) (too-many-locals)
bots/news/parsers/bitcoinmag_parser.py:236:15: W0718: Catching too general exception Exception (broad-exception-caught)
bots/news/parsers/bitcoinmag_parser.py:184:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/bitcoinmag_parser.py:229:20: E0602: Undefined variable 'asyncio' (undefined-variable)
bots/news/parsers/bitcoinmag_parser.py:231:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/bitcoinmag_parser.py:237:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
bots/news/parsers/bitcoinmag_parser.py:7:0: C0411: standard import "logging" should be placed before third party import "aiohttp" (wrong-import-order)
bots/news/parsers/bitcoinmag_parser.py:8:0: C0411: standard import "time" should be placed before third party import "aiohttp" (wrong-import-order)
bots/news/parsers/bitcoinmag_parser.py:10:0: C0411: standard import "re" should be placed before third party imports "aiohttp", "feedparser" (wrong-import-order)
bots/news/parsers/bitcoinmag_parser.py:11:0: C0411: standard import "typing.Dict" should be placed before third party imports "aiohttp", "feedparser" (wrong-import-order)
bots/news/parsers/bitcoinmag_parser.py:12:0: C0411: standard import "datetime.datetime" should be placed before third party imports "aiohttp", "feedparser" (wrong-import-order)
bots/news/parsers/bitcoinmag_parser.py:6:0: W0611: Unused import aiohttp (unused-import)
bots/news/parsers/bitcoinmag_parser.py:7:0: W0611: Unused import logging (unused-import)
bots/news/parsers/bitcoinmag_parser.py:10:0: W0611: Unused import re (unused-import)
bots/news/parsers/bitcoinmag_parser.py:11:0: W0611: Unused Optional imported from typing (unused-import)
************* Module project.bots.news.analyzers.keyword_analyzer
bots/news/analyzers/keyword_analyzer.py:566:0: C0301: Line too long (118/100) (line-too-long)
bots/news/analyzers/keyword_analyzer.py:10:0: E0401: Unable to import 'nltk' (import-error)
bots/news/analyzers/keyword_analyzer.py:11:0: E0401: Unable to import 'nltk.tokenize' (import-error)
bots/news/analyzers/keyword_analyzer.py:12:0: E0401: Unable to import 'nltk.corpus' (import-error)
bots/news/analyzers/keyword_analyzer.py:13:0: E0401: Unable to import 'nltk.util' (import-error)
bots/news/analyzers/keyword_analyzer.py:289:12: W0612: Unused variable 'category' (unused-variable)
bots/news/analyzers/keyword_analyzer.py:415:4: R0914: Too many local variables (23/15) (too-many-locals)
bots/news/analyzers/keyword_analyzer.py:556:8: C0415: Import outside toplevel (random) (import-outside-toplevel)
bots/news/analyzers/keyword_analyzer.py:415:4: R0912: Too many branches (14/12) (too-many-branches)
bots/news/analyzers/keyword_analyzer.py:415:4: R0915: Too many statements (51/50) (too-many-statements)
bots/news/analyzers/keyword_analyzer.py:6:0: W0611: Unused import re (unused-import)
bots/news/analyzers/keyword_analyzer.py:7:0: W0611: Unused import logging (unused-import)
bots/news/analyzers/keyword_analyzer.py:8:0: W0611: Unused Tuple imported from typing (unused-import)
bots/news/analyzers/keyword_analyzer.py:8:0: W0611: Unused Optional imported from typing (unused-import)
************* Module project.bots.news.analyzers.sentiment_analyzer
bots/news/analyzers/sentiment_analyzer.py:9:0: E0401: Unable to import 'nltk' (import-error)
bots/news/analyzers/sentiment_analyzer.py:10:0: E0401: Unable to import 'nltk.sentiment' (import-error)
bots/news/analyzers/sentiment_analyzer.py:11:0: E0401: Unable to import 'nltk.tokenize' (import-error)
bots/news/analyzers/sentiment_analyzer.py:12:0: E0401: Unable to import 'nltk.corpus' (import-error)
bots/news/analyzers/sentiment_analyzer.py:7:0: W0611: Unused import logging (unused-import)
bots/news/analyzers/sentiment_analyzer.py:8:0: W0611: Unused Tuple imported from typing (unused-import)
************* Module project.trading.strategy_base
trading/strategy_base.py:293:0: C0301: Line too long (120/100) (line-too-long)
trading/strategy_base.py:1:0: C0114: Missing module docstring (missing-module-docstring)
trading/strategy_base.py:6:0: E0401: Unable to import 'pandas' (import-error)
trading/strategy_base.py:7:0: E0401: Unable to import 'numpy' (import-error)
trading/strategy_base.py:10:0: E0611: No name 'setup_logger' in module 'project.utils.logging_utils' (no-name-in-module)
trading/strategy_base.py:15:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
trading/strategy_base.py:18:4: R0913: Too many arguments (8/5) (too-many-arguments)
trading/strategy_base.py:18:4: R0917: Too many positional arguments (8/5) (too-many-positional-arguments)
trading/strategy_base.py:121:0: R0902: Too many instance attributes (15/7) (too-many-instance-attributes)
trading/strategy_base.py:124:4: R0913: Too many arguments (11/5) (too-many-arguments)
trading/strategy_base.py:124:4: R0917: Too many positional arguments (11/5) (too-many-positional-arguments)
trading/strategy_base.py:296:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)
trading/strategy_base.py:378:8: W0107: Unnecessary pass statement (unnecessary-pass)
trading/strategy_base.py:394:8: W0107: Unnecessary pass statement (unnecessary-pass)
trading/strategy_base.py:407:8: W0107: Unnecessary pass statement (unnecessary-pass)
trading/strategy_base.py:446:15: W0718: Catching too general exception Exception (broad-exception-caught)
trading/strategy_base.py:439:26: E1102: self.on_signal is not callable (not-callable)
trading/strategy_base.py:450:28: W0613: Unused argument 'tick' (unused-argument)
trading/strategy_base.py:463:29: W0613: Unused argument 'trade' (unused-argument)
trading/strategy_base.py:476:34: W0613: Unused argument 'order_book' (unused-argument)
trading/strategy_base.py:501:18: E1102: self.on_position_opened is not callable (not-callable)
trading/strategy_base.py:503:18: E1102: self.on_position_closed is not callable (not-callable)
trading/strategy_base.py:8:0: C0411: standard import "abc.ABC" should be placed before third party imports "pandas", "numpy" (wrong-import-order)
trading/strategy_base.py:1:0: W0611: Unused import asyncio (unused-import)
trading/strategy_base.py:2:0: W0611: Unused import logging (unused-import)
trading/strategy_base.py:3:0: W0611: Unused import time (unused-import)
trading/strategy_base.py:4:0: W0611: Unused Optional imported from typing (unused-import)
trading/strategy_base.py:4:0: W0611: Unused Tuple imported from typing (unused-import)
trading/strategy_base.py:4:0: W0611: Unused Union imported from typing (unused-import)
trading/strategy_base.py:4:0: W0611: Unused Any imported from typing (unused-import)
trading/strategy_base.py:4:0: W0611: Unused Callable imported from typing (unused-import)
trading/strategy_base.py:5:0: W0611: Unused timedelta imported from datetime (unused-import)
trading/strategy_base.py:7:0: W0611: Unused numpy imported as np (unused-import)
************* Module project.trading.trading_bot
trading/trading_bot.py:737:0: C0301: Line too long (137/100) (line-too-long)
trading/trading_bot.py:856:0: C0301: Line too long (132/100) (line-too-long)
trading/trading_bot.py:877:0: C0301: Line too long (152/100) (line-too-long)
trading/trading_bot.py:1000:0: C0301: Line too long (133/100) (line-too-long)
trading/trading_bot.py:1039:0: C0301: Line too long (131/100) (line-too-long)
trading/trading_bot.py:1050:0: C0301: Line too long (105/100) (line-too-long)
trading/trading_bot.py:1094:0: C0301: Line too long (188/100) (line-too-long)
trading/trading_bot.py:1120:0: C0301: Line too long (101/100) (line-too-long)
trading/trading_bot.py:1133:0: C0301: Line too long (167/100) (line-too-long)
trading/trading_bot.py:1146:0: C0301: Line too long (108/100) (line-too-long)
trading/trading_bot.py:1:0: C0302: Too many lines in module (1498/1000) (too-many-lines)
trading/trading_bot.py:1407:13: W0511: TODO: Реализовать расчет просадки на основе истории изменения капитала (fixme)
trading/trading_bot.py:1:0: C0114: Missing module docstring (missing-module-docstring)
trading/trading_bot.py:14:0: E0611: No name 'setup_logger' in module 'project.utils.logging_utils' (no-name-in-module)
trading/trading_bot.py:15:0: E0611: No name 'NotificationManager' in module 'project.utils.notify' (no-name-in-module)
trading/trading_bot.py:15:0: E0611: No name 'NotificationLevel' in module 'project.utils.notify' (no-name-in-module)
trading/trading_bot.py:16:0: E0001: Cannot import 'project.exchange.exchange_manager' due to 'expected an indented block after 'elif' statement on line 342 (project.exchange.exchange_manager, line 345)' (syntax-error)
trading/trading_bot.py:16:0: E0611: No name 'exchange_manager' in module 'project.exchange' (no-name-in-module)
trading/trading_bot.py:19:0: E0611: No name 'configuration' in module 'project.config' (no-name-in-module)
trading/trading_bot.py:34:0: R0902: Too many instance attributes (46/7) (too-many-instance-attributes)
trading/trading_bot.py:360:28: W0621: Redefining name 'signal' from outer scope (line 12) (redefined-outer-name)
trading/trading_bot.py:383:19: W0718: Catching too general exception Exception (broad-exception-caught)
trading/trading_bot.py:432:12: C0415: Import outside toplevel (pandas) (import-outside-toplevel)
trading/trading_bot.py:432:12: E0401: Unable to import 'pandas' (import-error)
trading/trading_bot.py:485:12: C0415: Import outside toplevel (pandas) (import-outside-toplevel)
trading/trading_bot.py:485:12: E0401: Unable to import 'pandas' (import-error)
trading/trading_bot.py:522:12: C0415: Import outside toplevel (project.trading.strategy_base.StrategyRegistry) (import-outside-toplevel)
trading/trading_bot.py:578:28: W0621: Redefining name 'signal' from outer scope (line 12) (redefined-outer-name)
trading/trading_bot.py:610:15: W0718: Catching too general exception Exception (broad-exception-caught)
trading/trading_bot.py:550:4: R0912: Too many branches (14/12) (too-many-branches)
trading/trading_bot.py:665:15: W0718: Catching too general exception Exception (broad-exception-caught)
trading/trading_bot.py:715:15: W0718: Catching too general exception Exception (broad-exception-caught)
trading/trading_bot.py:739:15: W0718: Catching too general exception Exception (broad-exception-caught)
trading/trading_bot.py:827:15: W0718: Catching too general exception Exception (broad-exception-caught)
trading/trading_bot.py:747:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
trading/trading_bot.py:889:15: W0718: Catching too general exception Exception (broad-exception-caught)
trading/trading_bot.py:892:36: W0621: Redefining name 'signal' from outer scope (line 12) (redefined-outer-name)
trading/trading_bot.py:936:51: W0621: Redefining name 'signal' from outer scope (line 12) (redefined-outer-name)
trading/trading_bot.py:1044:15: W0718: Catching too general exception Exception (broad-exception-caught)
trading/trading_bot.py:1140:15: W0718: Catching too general exception Exception (broad-exception-caught)
trading/trading_bot.py:1093:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
trading/trading_bot.py:1132:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
trading/trading_bot.py:1145:16: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
trading/trading_bot.py:1194:15: W0718: Catching too general exception Exception (broad-exception-caught)
trading/trading_bot.py:1183:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
trading/trading_bot.py:1215:11: R1701: Consider merging these isinstance calls to isinstance(self.stop_loss, (float, int)) (consider-merging-isinstance)
trading/trading_bot.py:1217:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
trading/trading_bot.py:1232:20: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
trading/trading_bot.py:1256:11: R1701: Consider merging these isinstance calls to isinstance(self.take_profit, (float, int)) (consider-merging-isinstance)
trading/trading_bot.py:1258:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
trading/trading_bot.py:1295:15: W0718: Catching too general exception Exception (broad-exception-caught)
trading/trading_bot.py:1289:17: E0602: Undefined variable 'np' (undefined-variable)
trading/trading_bot.py:1289:28: E0602: Undefined variable 'np' (undefined-variable)
trading/trading_bot.py:1292:18: E0602: Undefined variable 'np' (undefined-variable)
trading/trading_bot.py:1405:12: W0612: Unused variable 'equity_history' (unused-variable)
trading/trading_bot.py:1412:31: W0621: Redefining name 'signal' from outer scope (line 12) (redefined-outer-name)
trading/trading_bot.py:1466:19: W0718: Catching too general exception Exception (broad-exception-caught)
trading/trading_bot.py:2:0: W0611: Unused import logging (unused-import)
trading/trading_bot.py:4:0: W0611: Unused import json (unused-import)
trading/trading_bot.py:6:0: W0611: Unused List imported from typing (unused-import)
trading/trading_bot.py:6:0: W0611: Unused Tuple imported from typing (unused-import)
trading/trading_bot.py:6:0: W0611: Unused Union imported from typing (unused-import)
trading/trading_bot.py:6:0: W0611: Unused Any imported from typing (unused-import)
trading/trading_bot.py:6:0: W0611: Unused Callable imported from typing (unused-import)
trading/trading_bot.py:7:0: W0611: Unused timedelta imported from datetime (unused-import)
trading/trading_bot.py:10:0: W0611: Unused import inspect (unused-import)
trading/trading_bot.py:11:0: W0611: Unused import os (unused-import)
trading/trading_bot.py:12:0: W0611: Unused import signal (unused-import)
trading/trading_bot.py:19:0: W0611: Unused get_config imported from project.config.configuration (unused-import)
************* Module project.risk_management.position_sizer
risk_management/position_sizer.py:190:0: C0301: Line too long (133/100) (line-too-long)
risk_management/position_sizer.py:279:0: C0301: Line too long (107/100) (line-too-long)
risk_management/position_sizer.py:286:0: C0301: Line too long (135/100) (line-too-long)
risk_management/position_sizer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
risk_management/position_sizer.py:6:0: E0401: Unable to import 'numpy' (import-error)
risk_management/position_sizer.py:8:0: E0611: No name 'setup_logger' in module 'project.utils.logging_utils' (no-name-in-module)
risk_management/position_sizer.py:13:0: R0902: Too many instance attributes (23/7) (too-many-instance-attributes)
risk_management/position_sizer.py:77:4: R0913: Too many arguments (6/5) (too-many-arguments)
risk_management/position_sizer.py:77:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
risk_management/position_sizer.py:220:12: W0201: Attribute 'volatility_history' defined outside __init__ (attribute-defined-outside-init)
risk_management/position_sizer.py:227:12: W0201: Attribute 'volatility_history' defined outside __init__ (attribute-defined-outside-init)
risk_management/position_sizer.py:333:12: W0201: Attribute 'volatility_history' defined outside __init__ (attribute-defined-outside-init)
risk_management/position_sizer.py:232:8: W0201: Attribute 'avg_volatility' defined outside __init__ (attribute-defined-outside-init)
risk_management/position_sizer.py:334:12: W0201: Attribute 'avg_volatility' defined outside __init__ (attribute-defined-outside-init)
risk_management/position_sizer.py:372:12: W0201: Attribute 'avg_volatility' defined outside __init__ (attribute-defined-outside-init)
risk_management/position_sizer.py:1:0: W0611: Unused import logging (unused-import)
risk_management/position_sizer.py:2:0: W0611: Unused import time (unused-import)
risk_management/position_sizer.py:3:0: W0611: Unused import math (unused-import)
risk_management/position_sizer.py:4:0: W0611: Unused List imported from typing (unused-import)
risk_management/position_sizer.py:4:0: W0611: Unused Optional imported from typing (unused-import)
risk_management/position_sizer.py:4:0: W0611: Unused Union imported from typing (unused-import)
risk_management/position_sizer.py:4:0: W0611: Unused Any imported from typing (unused-import)
risk_management/position_sizer.py:5:0: W0611: Unused timedelta imported from datetime (unused-import)
************* Module project.risk_management.portfolio_manager
risk_management/portfolio_manager.py:350:0: C0301: Line too long (101/100) (line-too-long)
risk_management/portfolio_manager.py:6:0: E0401: Unable to import 'numpy' (import-error)
risk_management/portfolio_manager.py:7:0: E0401: Unable to import 'pandas' (import-error)
risk_management/portfolio_manager.py:91:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:108:19: W0718: Catching too general exception Exception (broad-exception-caught)
risk_management/portfolio_manager.py:104:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:109:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:131:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:163:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:174:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:194:23: W0718: Catching too general exception Exception (broad-exception-caught)
risk_management/portfolio_manager.py:190:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:195:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:211:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:235:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:244:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:384:15: W0718: Catching too general exception Exception (broad-exception-caught)
risk_management/portfolio_manager.py:325:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:348:35: W0718: Catching too general exception Exception (broad-exception-caught)
risk_management/portfolio_manager.py:349:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:362:31: W0718: Catching too general exception Exception (broad-exception-caught)
risk_management/portfolio_manager.py:321:8: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)
risk_management/portfolio_manager.py:363:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:321:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
risk_management/portfolio_manager.py:377:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:385:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:308:4: R0912: Too many branches (15/12) (too-many-branches)
risk_management/portfolio_manager.py:435:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:443:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:481:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:551:15: W0718: Catching too general exception Exception (broad-exception-caught)
risk_management/portfolio_manager.py:546:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:552:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:485:4: R0912: Too many branches (14/12) (too-many-branches)
risk_management/portfolio_manager.py:564:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/portfolio_manager.py:595:8: C0415: Import outside toplevel (ccxt) (import-outside-toplevel)
risk_management/portfolio_manager.py:595:8: E0401: Unable to import 'ccxt' (import-error)
risk_management/portfolio_manager.py:604:4: R0912: Too many branches (15/12) (too-many-branches)
risk_management/portfolio_manager.py:666:4: R0912: Too many branches (15/12) (too-many-branches)
risk_management/portfolio_manager.py:728:4: R0912: Too many branches (15/12) (too-many-branches)
risk_management/portfolio_manager.py:8:0: C0411: standard import "logging" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
risk_management/portfolio_manager.py:9:0: C0411: standard import "time" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
risk_management/portfolio_manager.py:10:0: C0411: standard import "typing.Dict" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
risk_management/portfolio_manager.py:11:0: C0411: standard import "dataclasses.dataclass" should be placed before third party imports "numpy", "pandas" (wrong-import-order)
risk_management/portfolio_manager.py:8:0: W0611: Unused import logging (unused-import)
risk_management/portfolio_manager.py:10:0: W0611: Unused Union imported from typing (unused-import)
risk_management/portfolio_manager.py:10:0: W0611: Unused Tuple imported from typing (unused-import)
************* Module project.risk_management.var_calculator
risk_management/var_calculator.py:36:0: C0301: Line too long (112/100) (line-too-long)
risk_management/var_calculator.py:319:0: C0301: Line too long (101/100) (line-too-long)
risk_management/var_calculator.py:6:0: E0401: Unable to import 'numpy' (import-error)
risk_management/var_calculator.py:7:0: E0401: Unable to import 'pandas' (import-error)
risk_management/var_calculator.py:8:0: R0402: Use 'from scipy import stats' instead (consider-using-from-import)
risk_management/var_calculator.py:8:0: E0401: Unable to import 'scipy.stats' (import-error)
risk_management/var_calculator.py:35:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/var_calculator.py:69:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/var_calculator.py:110:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/var_calculator.py:156:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/var_calculator.py:198:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/var_calculator.py:206:4: R0914: Too many local variables (16/15) (too-many-locals)
risk_management/var_calculator.py:264:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/var_calculator.py:272:4: R0914: Too many local variables (20/15) (too-many-locals)
risk_management/var_calculator.py:346:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/var_calculator.py:335:8: W0612: Unused variable 'portfolio_var' (unused-variable)
risk_management/var_calculator.py:387:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
risk_management/var_calculator.py:9:0: C0411: standard import "logging" should be placed before third party imports "numpy", "pandas", "scipy.stats" (wrong-import-order)
risk_management/var_calculator.py:10:0: C0411: standard import "typing.Dict" should be placed before third party imports "numpy", "pandas", "scipy.stats" (wrong-import-order)
risk_management/var_calculator.py:9:0: W0611: Unused import logging (unused-import)
risk_management/var_calculator.py:10:0: W0611: Unused List imported from typing (unused-import)
risk_management/var_calculator.py:10:0: W0611: Unused Any imported from typing (unused-import)
risk_management/var_calculator.py:10:0: W0611: Unused Optional imported from typing (unused-import)
risk_management/var_calculator.py:10:0: W0611: Unused Union imported from typing (unused-import)
risk_management/var_calculator.py:10:0: W0611: Unused Tuple imported from typing (unused-import)
************* Module project.visualization.data_visualizer
visualization/data_visualizer.py:1118:0: C0301: Line too long (108/100) (line-too-long)
visualization/data_visualizer.py:1128:0: C0301: Line too long (111/100) (line-too-long)
visualization/data_visualizer.py:1263:0: C0301: Line too long (169/100) (line-too-long)
visualization/data_visualizer.py:1624:0: C0301: Line too long (107/100) (line-too-long)
visualization/data_visualizer.py:1656:0: C0301: Line too long (122/100) (line-too-long)
visualization/data_visualizer.py:1:0: C0302: Too many lines in module (2004/1000) (too-many-lines)
visualization/data_visualizer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
visualization/data_visualizer.py:2:0: E0401: Unable to import 'pandas' (import-error)
visualization/data_visualizer.py:3:0: E0401: Unable to import 'numpy' (import-error)
visualization/data_visualizer.py:4:0: E0401: Unable to import 'matplotlib.pyplot' (import-error)
visualization/data_visualizer.py:5:0: E0401: Unable to import 'matplotlib.dates' (import-error)
visualization/data_visualizer.py:6:0: E0401: Unable to import 'matplotlib.figure' (import-error)
visualization/data_visualizer.py:11:0: E0401: Unable to import 'plotly.graph_objects' (import-error)
visualization/data_visualizer.py:12:0: E0401: Unable to import 'plotly.subplots' (import-error)
visualization/data_visualizer.py:13:0: E0401: Unable to import 'plotly.express' (import-error)
visualization/data_visualizer.py:17:0: E0611: No name 'setup_logger' in module 'project.utils.logging_utils' (no-name-in-module)
visualization/data_visualizer.py:64:4: R0913: Too many arguments (6/5) (too-many-arguments)
visualization/data_visualizer.py:64:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
visualization/data_visualizer.py:64:4: R0914: Too many local variables (25/15) (too-many-locals)
visualization/data_visualizer.py:253:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:180:23: R1701: Consider merging these isinstance calls to isinstance(indicator_data, (pd.DataFrame, pd.Series)) (consider-merging-isinstance)
visualization/data_visualizer.py:85:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
visualization/data_visualizer.py:85:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
visualization/data_visualizer.py:64:4: R0912: Too many branches (17/12) (too-many-branches)
visualization/data_visualizer.py:64:4: R0915: Too many statements (56/50) (too-many-statements)
visualization/data_visualizer.py:257:4: R0913: Too many arguments (6/5) (too-many-arguments)
visualization/data_visualizer.py:257:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
visualization/data_visualizer.py:257:4: R0914: Too many local variables (19/15) (too-many-locals)
visualization/data_visualizer.py:426:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:333:23: R1701: Consider merging these isinstance calls to isinstance(indicator_data, (pd.DataFrame, pd.Series)) (consider-merging-isinstance)
visualization/data_visualizer.py:278:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
visualization/data_visualizer.py:406:23: R1735: Consider using '{"orientation": 'h', "yanchor": 'bottom', "y": 1.02, "xanchor": 'right', ... }' instead of a call to 'dict'. (use-dict-literal)
visualization/data_visualizer.py:278:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)
visualization/data_visualizer.py:257:4: R0912: Too many branches (17/12) (too-many-branches)
visualization/data_visualizer.py:527:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:655:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:631:23: R1735: Consider using '{"orientation": 'h', "yanchor": 'bottom', "y": 1.02, "xanchor": 'right', ... }' instead of a call to 'dict'. (use-dict-literal)
visualization/data_visualizer.py:659:4: R0914: Too many local variables (16/15) (too-many-locals)
visualization/data_visualizer.py:738:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:742:4: R0914: Too many local variables (16/15) (too-many-locals)
visualization/data_visualizer.py:837:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:804:31: R1735: Consider using '{"symbol": 'triangle-up', "size": 12, "color": 'green', "opacity": 0.7, ... }' instead of a call to 'dict'. (use-dict-literal)
visualization/data_visualizer.py:820:31: R1735: Consider using '{"symbol": 'triangle-down', "size": 12, "color": 'red', "opacity": 0.7, ... }' instead of a call to 'dict'. (use-dict-literal)
visualization/data_visualizer.py:940:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:903:27: R1735: Consider using '{"facecolor": 'black', "shrink": 0.05, "width": 1.5}' instead of a call to 'dict'. (use-dict-literal)
visualization/data_visualizer.py:944:4: R0914: Too many local variables (16/15) (too-many-locals)
visualization/data_visualizer.py:1043:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:1047:4: R0914: Too many local variables (16/15) (too-many-locals)
visualization/data_visualizer.py:1162:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:1121:25: R1735: Consider using '{"boxstyle": 'round', "alpha": 0.1}' instead of a call to 'dict'. (use-dict-literal)
visualization/data_visualizer.py:1131:25: R1735: Consider using '{"boxstyle": 'round', "alpha": 0.1}' instead of a call to 'dict'. (use-dict-literal)
visualization/data_visualizer.py:1166:4: R0914: Too many local variables (17/15) (too-many-locals)
visualization/data_visualizer.py:1295:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:1270:21: R1735: Consider using '{"boxstyle": 'round', "alpha": 0.1}' instead of a call to 'dict'. (use-dict-literal)
visualization/data_visualizer.py:1299:4: R0914: Too many local variables (17/15) (too-many-locals)
visualization/data_visualizer.py:1391:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:1360:20: W0612: Unused variable 'text' (unused-variable)
visualization/data_visualizer.py:1395:4: R0913: Too many arguments (6/5) (too-many-arguments)
visualization/data_visualizer.py:1395:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
visualization/data_visualizer.py:1395:4: R0914: Too many local variables (19/15) (too-many-locals)
visualization/data_visualizer.py:1514:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:1477:24: W0612: Unused variable 'text' (unused-variable)
visualization/data_visualizer.py:1518:4: R0913: Too many arguments (6/5) (too-many-arguments)
visualization/data_visualizer.py:1518:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
visualization/data_visualizer.py:1518:4: R0914: Too many local variables (28/15) (too-many-locals)
visualization/data_visualizer.py:1688:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:1580:16: C0103: Variable name "X" doesn't conform to snake_case naming style (invalid-name)
visualization/data_visualizer.py:1580:19: C0103: Variable name "Y" doesn't conform to snake_case naming style (invalid-name)
visualization/data_visualizer.py:1583:16: C0103: Variable name "Z" doesn't conform to snake_case naming style (invalid-name)
visualization/data_visualizer.py:1607:16: W0632: Possible unbalanced tuple unpacking with sequence defined at line 2 of : left side has 2 labels, right side has 1 value (unbalanced-tuple-unpacking)
visualization/data_visualizer.py:1692:4: R0914: Too many local variables (21/15) (too-many-locals)
visualization/data_visualizer.py:1815:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:1747:73: W0640: Cell variable timestamp defined in loop (cell-var-from-loop)
visualization/data_visualizer.py:1692:4: R0912: Too many branches (16/12) (too-many-branches)
visualization/data_visualizer.py:1819:4: R0914: Too many local variables (22/15) (too-many-locals)
visualization/data_visualizer.py:1960:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:1819:4: R0912: Too many branches (15/12) (too-many-branches)
visualization/data_visualizer.py:1989:15: W0718: Catching too general exception Exception (broad-exception-caught)
visualization/data_visualizer.py:7:0: C0411: standard import "typing.Dict" should be placed before third party imports "pandas", "numpy", "matplotlib.pyplot", "matplotlib.dates", "matplotlib.figure.Figure" (wrong-import-order)
visualization/data_visualizer.py:8:0: C0411: standard import "io" should be placed before third party imports "pandas", "numpy", "matplotlib.pyplot", "matplotlib.dates", "matplotlib.figure.Figure" (wrong-import-order)
visualization/data_visualizer.py:9:0: C0411: standard import "base64" should be placed before third party imports "pandas", "numpy", "matplotlib.pyplot", "matplotlib.dates", "matplotlib.figure.Figure" (wrong-import-order)
visualization/data_visualizer.py:10:0: C0411: standard import "datetime.datetime" should be placed before third party imports "pandas", "numpy", "matplotlib.pyplot", "matplotlib.dates", "matplotlib.figure.Figure" (wrong-import-order)
visualization/data_visualizer.py:14:0: C0411: standard import "json" should be placed before third party imports "pandas", "numpy", "matplotlib.pyplot" (...) "plotly.graph_objects", "plotly.subplots.make_subplots", "plotly.express" (wrong-import-order)
visualization/data_visualizer.py:15:0: C0411: standard import "os" should be placed before third party imports "pandas", "numpy", "matplotlib.pyplot" (...) "plotly.graph_objects", "plotly.subplots.make_subplots", "plotly.express" (wrong-import-order)
visualization/data_visualizer.py:1:0: W0611: Unused import logging (unused-import)
visualization/data_visualizer.py:7:0: W0611: Unused Callable imported from typing (unused-import)
visualization/data_visualizer.py:10:0: W0611: Unused datetime imported from datetime (unused-import)
visualization/data_visualizer.py:10:0: W0611: Unused timedelta imported from datetime (unused-import)
visualization/data_visualizer.py:13:0: W0611: Unused plotly.express imported as px (unused-import)
visualization/data_visualizer.py:14:0: W0611: Unused import json (unused-import)
************* Module project.main.eventloop
main/eventloop.py:52:8: C0415: Import outside toplevel (resource) (import-outside-toplevel)
main/eventloop.py:58:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/eventloop.py:55:8: W0612: Unused variable 'soft' (unused-variable)
main/eventloop.py:72:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/eventloop.py:77:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/eventloop.py:84:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/eventloop.py:62:22: W0613: Unused argument 'loop' (unused-argument)
main/eventloop.py:159:15: W0718: Catching too general exception Exception (broad-exception-caught)
main/eventloop.py:146:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/eventloop.py:157:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/eventloop.py:160:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/eventloop.py:7:0: W0611: Unused import logging (unused-import)
main/eventloop.py:9:0: W0611: Unused import os (unused-import)
main/eventloop.py:13:0: W0611: Unused cast imported from typing (unused-import)
************* Module project.main.application
main/application.py:99:9: W0511: TODO: Загружать стратегии из конфигурации или БД (fixme)
main/application.py:87:15: W0718: Catching too general exception Exception (broad-exception-caught)
main/application.py:88:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/application.py:107:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/application.py:129:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/application.py:140:19: W0718: Catching too general exception Exception (broad-exception-caught)
main/application.py:141:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/application.py:148:19: W0718: Catching too general exception Exception (broad-exception-caught)
main/application.py:149:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/application.py:156:19: W0718: Catching too general exception Exception (broad-exception-caught)
main/application.py:157:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/application.py:167:19: W0718: Catching too general exception Exception (broad-exception-caught)
main/application.py:168:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/application.py:194:11: W0718: Catching too general exception Exception (broad-exception-caught)
main/application.py:195:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/application.py:8:0: W0611: Unused import logging (unused-import)
main/application.py:9:0: W0611: Unused Dict imported from typing (unused-import)
main/application.py:9:0: W0611: Unused Set imported from typing (unused-import)
main/application.py:9:0: W0611: Unused Any imported from typing (unused-import)
************* Module project.main.main
main/main.py:1:0: C0114: Missing module docstring (missing-module-docstring)
main/main.py:3:0: E0401: Unable to import 'pandas' (import-error)
main/main.py:4:0: E0611: No name 'get_config' in module 'config' (no-name-in-module)
main/main.py:7:0: E0401: Unable to import 'project.optimizers.genetic_optimizer' (import-error)
main/main.py:7:0: E0611: No name 'optimizers' in module 'project' (no-name-in-module)
main/main.py:8:0: E0401: Unable to import 'project.visualizers.data_visualizer' (import-error)
main/main.py:8:0: E0611: No name 'visualizers' in module 'project' (no-name-in-module)
main/main.py:13:0: C0116: Missing function or method docstring (missing-function-docstring)
main/main.py:36:4: C0415: Import outside toplevel (project.trading.strategy_base.Strategy) (import-outside-toplevel)
main/main.py:57:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main/main.py:60:0: C0116: Missing function or method docstring (missing-function-docstring)
main/main.py:94:11: W0718: Catching too general exception Exception (broad-exception-caught)
main/main.py:95:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module project.integrations.trading_view_webhooks
integrations/trading_view_webhooks.py:14:0: E0401: Unable to import 'aiohttp' (import-error)
integrations/trading_view_webhooks.py:20:0: E0611: No name 'send_trading_signal' in module 'project.utils.notify' (no-name-in-module)
integrations/trading_view_webhooks.py:28:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
integrations/trading_view_webhooks.py:59:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/trading_view_webhooks.py:74:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/trading_view_webhooks.py:86:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/trading_view_webhooks.py:107:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/trading_view_webhooks.py:163:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/trading_view_webhooks.py:160:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/trading_view_webhooks.py:164:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/trading_view_webhooks.py:219:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/trading_view_webhooks.py:195:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/trading_view_webhooks.py:209:27: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/trading_view_webhooks.py:210:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/trading_view_webhooks.py:220:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/trading_view_webhooks.py:225:27: W0613: Unused argument 'request' (unused-argument)
integrations/trading_view_webhooks.py:258:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/trading_view_webhooks.py:285:19: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/trading_view_webhooks.py:281:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/trading_view_webhooks.py:286:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/trading_view_webhooks.py:6:0: W0611: Unused import asyncio (unused-import)
integrations/trading_view_webhooks.py:10:0: W0611: Unused import logging (unused-import)
************* Module project.integrations.rest_api
integrations/rest_api.py:12:0: E0401: Unable to import 'aiohttp' (import-error)
integrations/rest_api.py:13:0: E0401: Unable to import 'jwt' (import-error)
integrations/rest_api.py:24:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
integrations/rest_api.py:48:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/rest_api.py:133:8: W0621: Redefining name 'StrategyManager' from outer scope (line 18) (redefined-outer-name)
integrations/rest_api.py:133:8: W0404: Reimport 'StrategyManager' (imported line 18) (reimported)
integrations/rest_api.py:133:8: C0415: Import outside toplevel (project.bots.strategies.strategy_manager.StrategyManager) (import-outside-toplevel)
integrations/rest_api.py:156:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/rest_api.py:174:33: W0613: Unused argument 'request' (unused-argument)
integrations/rest_api.py:180:8: C0415: Import outside toplevel (project.__version__) (import-outside-toplevel)
integrations/rest_api.py:178:32: W0613: Unused argument 'request' (unused-argument)
integrations/rest_api.py:186:35: W0613: Unused argument 'request' (unused-argument)
integrations/rest_api.py:279:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/rest_api.py:280:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/rest_api.py:312:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/rest_api.py:313:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/rest_api.py:346:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/rest_api.py:327:12: C0415: Import outside toplevel (project.utils.ccxt_exchanges.connect_exchange, project.utils.ccxt_exchanges.fetch_open_orders, project.utils.ccxt_exchanges.fetch_closed_orders) (import-outside-toplevel)
integrations/rest_api.py:347:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/rest_api.py:333:12: W0612: Unused variable 'exchange' (unused-variable)
integrations/rest_api.py:352:4: R0914: Too many local variables (16/15) (too-many-locals)
integrations/rest_api.py:413:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/rest_api.py:379:12: C0415: Import outside toplevel (project.trade_executor.order_executor.OrderExecutor) (import-outside-toplevel)
integrations/rest_api.py:414:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/rest_api.py:441:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/rest_api.py:433:12: C0415: Import outside toplevel (project.utils.ccxt_exchanges.connect_exchange, project.utils.ccxt_exchanges.cancel_order) (import-outside-toplevel)
integrations/rest_api.py:442:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/rest_api.py:433:12: W0611: Unused connect_exchange imported from project.utils.ccxt_exchanges (unused-import)
integrations/rest_api.py:460:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/rest_api.py:454:12: C0415: Import outside toplevel (project.utils.ccxt_exchanges.fetch_ticker) (import-outside-toplevel)
integrations/rest_api.py:461:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/rest_api.py:495:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/rest_api.py:475:12: C0415: Import outside toplevel (project.utils.ccxt_exchanges.fetch_ohlcv) (import-outside-toplevel)
integrations/rest_api.py:496:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/rest_api.py:6:0: W0611: Unused import asyncio (unused-import)
integrations/rest_api.py:8:0: W0611: Unused import logging (unused-import)
integrations/rest_api.py:10:0: W0611: Unused Dict imported from typing (unused-import)
integrations/rest_api.py:10:0: W0611: Unused List imported from typing (unused-import)
integrations/rest_api.py:10:0: W0611: Unused Any imported from typing (unused-import)
integrations/rest_api.py:10:0: W0611: Unused Optional imported from typing (unused-import)
integrations/rest_api.py:18:0: W0611: Unused StrategyManager imported from project.bots.strategies.strategy_manager (unused-import)
integrations/rest_api.py:19:0: W0611: Unused Database imported from project.infrastructure.database (unused-import)
************* Module project.integrations.slack_integration
integrations/slack_integration.py:10:0: E0401: Unable to import 'aiohttp' (import-error)
integrations/slack_integration.py:11:0: E0401: Unable to import 'slack_sdk.web.async_client' (import-error)
integrations/slack_integration.py:12:0: E0401: Unable to import 'slack_sdk.errors' (import-error)
integrations/slack_integration.py:64:4: R0913: Too many arguments (6/5) (too-many-arguments)
integrations/slack_integration.py:64:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
integrations/slack_integration.py:105:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/slack_integration.py:100:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/slack_integration.py:103:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/slack_integration.py:106:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/slack_integration.py:145:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/slack_integration.py:140:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/slack_integration.py:143:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/slack_integration.py:146:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/slack_integration.py:193:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/slack_integration.py:188:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/slack_integration.py:191:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/slack_integration.py:194:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/slack_integration.py:227:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/slack_integration.py:222:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/slack_integration.py:225:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/slack_integration.py:228:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/slack_integration.py:263:4: R0913: Too many arguments (8/5) (too-many-arguments)
integrations/slack_integration.py:263:4: R0917: Too many positional arguments (8/5) (too-many-positional-arguments)
integrations/slack_integration.py:7:0: W0611: Unused import logging (unused-import)
integrations/slack_integration.py:8:0: W0611: Unused Union imported from typing (unused-import)
integrations/slack_integration.py:10:0: W0611: Unused import aiohttp (unused-import)
************* Module project.integrations.binance_liquidations
integrations/binance_liquidations.py:187:0: C0301: Line too long (109/100) (line-too-long)
integrations/binance_liquidations.py:300:0: C0301: Line too long (106/100) (line-too-long)
integrations/binance_liquidations.py:10:0: E0401: Unable to import 'websockets' (import-error)
integrations/binance_liquidations.py:16:0: E0611: No name 'send_alert' in module 'project.utils.notify' (no-name-in-module)
integrations/binance_liquidations.py:26:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
integrations/binance_liquidations.py:56:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:67:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:141:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:175:19: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/binance_liquidations.py:169:27: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/binance_liquidations.py:168:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:170:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:177:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:180:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:186:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:263:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/binance_liquidations.py:242:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:258:23: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/binance_liquidations.py:259:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:264:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:277:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/binance_liquidations.py:276:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:278:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:302:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/binance_liquidations.py:299:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:303:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:336:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/binance_liquidations.py:321:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
integrations/binance_liquidations.py:337:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/binance_liquidations.py:11:0: C0411: standard import "typing.Dict" should be placed before third party import "websockets" (wrong-import-order)
integrations/binance_liquidations.py:8:0: W0611: Unused import logging (unused-import)
integrations/binance_liquidations.py:16:0: W0611: Unused send_notification imported from project.utils.notify (unused-import)
integrations/binance_liquidations.py:18:0: W0611: Unused connect_exchange imported from project.utils.ccxt_exchanges (unused-import)
************* Module project.integrations.email_sender
integrations/email_sender.py:76:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/email_sender.py:79:4: R0913: Too many arguments (6/5) (too-many-arguments)
integrations/email_sender.py:79:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
integrations/email_sender.py:134:23: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/email_sender.py:135:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/email_sender.py:166:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/email_sender.py:164:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/email_sender.py:167:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/email_sender.py:7:0: W0611: Unused import logging (unused-import)
************* Module project.integrations.telegram_integration
integrations/telegram_integration.py:74:0: C0301: Line too long (107/100) (line-too-long)
integrations/telegram_integration.py:130:0: C0301: Line too long (110/100) (line-too-long)
integrations/telegram_integration.py:243:0: C0301: Line too long (101/100) (line-too-long)
integrations/telegram_integration.py:10:0: E0401: Unable to import 'aiogram' (import-error)
integrations/telegram_integration.py:11:0: E0401: Unable to import 'aiogram.types' (import-error)
integrations/telegram_integration.py:12:0: E0401: Unable to import 'aiogram.utils.exceptions' (import-error)
integrations/telegram_integration.py:73:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/telegram_integration.py:108:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/telegram_integration.py:129:23: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/telegram_integration.py:132:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/telegram_integration.py:146:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/telegram_integration.py:200:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/telegram_integration.py:193:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/telegram_integration.py:196:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/telegram_integration.py:201:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/telegram_integration.py:237:19: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/telegram_integration.py:238:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/telegram_integration.py:242:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/telegram_integration.py:251:15: E0602: Undefined variable 'Union' (undefined-variable)
integrations/telegram_integration.py:288:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/telegram_integration.py:286:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/telegram_integration.py:289:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/telegram_integration.py:296:18: E0602: Undefined variable 'Union' (undefined-variable)
integrations/telegram_integration.py:333:15: W0718: Catching too general exception Exception (broad-exception-caught)
integrations/telegram_integration.py:331:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/telegram_integration.py:334:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
integrations/telegram_integration.py:6:0: W0611: Unused import asyncio (unused-import)
integrations/telegram_integration.py:7:0: W0611: Unused import logging (unused-import)
integrations/telegram_integration.py:9:0: W0611: Unused Any imported from typing (unused-import)
integrations/telegram_integration.py:9:0: W0611: Unused Set imported from typing (unused-import)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.news.parsers.bitcoinmag_parser:[64:89]
==project.bots.news.parsers.coindesk_parser:[64:89]
                        )
                        return []

                    rss_content = await response.text()

            # Парсим RSS
            feed = feedparser.parse(rss_content)

            # Обрабатываем каждую запись
            for entry in feed.entries[:limit]:
                # Извлекаем данные из записи
                title = entry.get("title", "")
                link = entry.get("link", "")
                published = entry.get("published", "")
                summary = entry.get("summary", "")

                # Преобразуем дату публикации
                try:
                    published_at = datetime.strptime(
                        published, "%a, %d %b %Y %H:%M:%S %z"
                    )
                except:
                    published_at = datetime.now()

                # Определяем автора (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.news.parsers.bitcoinmag_parser:[119:148]
==project.bots.news.parsers.coindesk_parser:[119:148]
            return []

    @async_handle_error
    async def _fetch_article_content(self, url: str) -> None:
        """
        Получает полное содержимое статьи по URL.

        Args:
            url: URL статьи
        """
        if not url or url not in self.articles_cache:
            return

        try:
            # Получаем HTML-страницу
            async with aiohttp_session() as session:
                async with session.get(url) as response:
                    if response.status != 200:
                        logger.warning(
                            f"Не удалось получить содержимое статьи {url}. Статус: {response.status}"
                        )
                        return

                    html_content = await response.text()

            # Парсим HTML
            soup = BeautifulSoup(html_content, "html.parser")

            # Ищем содержимое статьи (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.main_strategy:[178:200]
==project.bots.strategies.mean_revision:[163:185]
        pass

    @async_handle_error
    async def _calculate_indicators(self) -> None:
        """
        Рассчитывает технические индикаторы для всех символов и таймфреймов.
        """
        for symbol in self.symbols:
            for timeframe in self.timeframes:
                try:
                    # Получаем данные OHLCV
                    ohlcv = await self.market_data.get_ohlcv(
                        self.exchange_id, symbol, timeframe, limit=100
                    )

                    if ohlcv.empty:
                        logger.warning(
                            f"Нет данных OHLCV для {symbol} на таймфрейме {timeframe}"
                        )
                        continue

                    # Получаем временную метку последней свечи (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.main_strategy:[358:374]
==project.bots.strategies.scalping:[175:191]
        signals = {}

        for symbol in self.symbols:
            try:
                # Получаем тикер
                ticker = await self.market_data.get_ticker(self.exchange_id, symbol)
                if not ticker:
                    continue

                # Проверяем объем
                volume = ticker.get("quoteVolume", 0) or ticker.get("volume", 0)
                if volume < self.strategy_config["min_volume"]:
                    continue

                # Получаем текущую цену, спред и проверяем его размер
                current_price = ticker.get("last", 0) (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.base_bot:[129:141]
==project.bots.strategies.base_strategy:[169:181]
        if self.task:
            self.task.cancel()
            try:
                await self.task
            except asyncio.CancelledError:
                pass
            self.task = None

        # Вызываем метод очистки
        try:
            await self._cleanup()
        except Exception as e: (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.api.rest_api:[355:367]
==project.api.websocket:[394:406]
                bots = bot_manager.get_bots()

                # Преобразуем в JSON-совместимый формат
                bot_list = []
                for bot_id, bot in bots.items():
                    bot_info = {
                        "id": bot_id,
                        "name": bot.name,
                        "status": bot.get_status(),
                        "type": bot.__class__.__name__,
                        "exchange": bot.exchange_id,
                        "symbols": bot.symbols, (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.news.parsers.bitcoinmag_parser:[150:177]
==project.bots.news.parsers.coindesk_parser:[150:177]
            if article_body:
                # Извлекаем текст из всех параграфов
                paragraphs = article_body[0].find_all("p")
                content = " ".join([p.get_text().strip() for p in paragraphs])

                # Обновляем кэшированную статью
                if url in self.articles_cache:
                    self.articles_cache[url]["content"] = content
                    logger.debug(f"Обновлено содержимое статьи: {url}")

        except Exception as e:
            logger.error(f"Ошибка при получении содержимого статьи {url}: {str(e)}")

    @async_handle_error
    async def search_news(self, query: str, limit: int = 10) -> List[Dict[str, Any]]:
        """
        Ищет новости по запросу.

        Args:
            query: Поисковый запрос
            limit: Максимальное количество результатов

        Returns:
            Список словарей с данными статей
        """
        try:
            # Формируем URL для поиска (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.news.parsers.bitcoinmag_parser:[48:63]
==project.bots.news.parsers.coindesk_parser:[48:63]
        current_time = time.time()

        # Проверяем, не слишком ли часто делаем запросы (не чаще раза в 5 минут)
        if current_time - self.last_fetch_time < 300:
            # Возвращаем кэшированные статьи
            return list(self.articles_cache.values())[:limit]

        try:
            articles = []

            # Получаем RSS-ленту
            async with aiohttp_session() as session:
                async with session.get(self.rss_url) as response:
                    if response.status != 200:
                        logger.warning( (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.main_strategy:[638:651]
==project.bots.strategies.scalping:[498:511]
            if symbol in self.open_positions:
                position = self.open_positions[symbol]
                position_side = position["side"]

                # Если сигнал противоположен стороне позиции, закрываем позицию
                if (position_side == "long" and action == "sell") or (
                    position_side == "short" and action == "buy"
                ):
                    action = "exit"
                # Если сигнал совпадает со стороной позиции или "hold", продолжаем держать
                else:
                    action = "hold"
            # Если позиции нет, и сигнал "hold", не делаем ничего (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.main_strategy:[216:226]
==project.bots.strategies.scalping:[264:275]
                    ema_short = Indicators.exponential_moving_average(
                        ohlcv, self.strategy_config["ema_short_period"]
                    )
                    ema_medium = Indicators.exponential_moving_average(
                        ohlcv, self.strategy_config["ema_medium_period"]
                    )
                    ema_long = Indicators.exponential_moving_average(
                        ohlcv, self.strategy_config["ema_long_period"]
                    )
 (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.futures:[395:408]
==project.bots.strategies.mean_revision:[372:385]
        for symbol in self.symbols:
            try:
                # Получаем тикер
                ticker = await self.market_data.get_ticker(self.exchange_id, symbol)
                if not ticker:
                    continue

                # Получаем текущую цену
                current_price = ticker.get("last", 0)
                if current_price <= 0:
                    continue

                # Получаем данные OHLCV для основного таймфрейма (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.mean_revision:[174:185]
==project.bots.strategies.volatility_strategy:[193:204]
                    ohlcv = await self.market_data.get_ohlcv(
                        self.exchange_id, symbol, timeframe, limit=100
                    )

                    if ohlcv.empty:
                        logger.warning(
                            f"Нет данных OHLCV для {symbol} на таймфрейме {timeframe}"
                        )
                        continue

                    # Сохраняем недавние максимумы и минимумы (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.news.parsers.bitcoinmag_parser:[209:218]
==project.bots.news.parsers.coindesk_parser:[212:221]
                    summary = ""
                    if summary_elem:
                        summary = summary_elem.get_text().strip()

                    # Создаем запись о статье
                    article = {
                        "title": title,
                        "url": link,
                        "published_at": datetime.now(),  # Точная дата неизвестна (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.news.parsers.bitcoinmag_parser:[92:99]
==project.bots.news.parsers.coindesk_parser:[92:99]
                article = {
                    "title": title,
                    "url": link,
                    "published_at": published_at,
                    "author": author,
                    "summary": summary,
                    "content": summary,  # Краткое содержание по умолчанию (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.news.news_bot:[606:616]
==project.bots.strategies.base_strategy:[562:572]
            if not ticker:
                continue

            current_price = ticker.get("last", 0)
            if current_price <= 0:
                continue

            # Получаем детали позиции
            entry_price = position["entry_price"]
            side = position["side"] (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.news.news_bot:[540:550]
==project.bots.strategies.base_strategy:[845:855]
                exchange_id=self.exchange_id,
            )

            if not order_result.success:
                logger.error(
                    f"Ошибка при выполнении ордера для {symbol}: {order_result.error}"
                )
                return False

            # Добавляем ордер в список активных (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.base_strategy:[559:570]
==project.bots.strategies.futures:[396:408]
            try:
                # Получаем текущие рыночные данные
                ticker = await self.market_data.get_ticker(self.exchange_id, symbol)
                if not ticker:
                    continue

                current_price = ticker.get("last", 0)
                if current_price <= 0:
                    continue

                # Проверяем, достигнуты ли уровни стоп-лосса или тейк-профита (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.mean_revision:[373:385]
==project.bots.strategies.volatility_strategy:[347:359]
            try:
                # Получаем тикер
                ticker = await self.market_data.get_ticker(self.exchange_id, symbol)
                if not ticker:
                    continue

                # Получаем текущую цену
                current_price = ticker.get("last", 0)
                if current_price <= 0:
                    continue

                # Проверяем объем (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.mean_revision:[370:381]
==project.bots.strategies.memcoin:[351:362]
        await self._load_historical_data()

        for symbol in self.symbols:
            try:
                # Получаем тикер
                ticker = await self.market_data.get_ticker(self.exchange_id, symbol)
                if not ticker:
                    continue

                # Получаем текущую цену и объем
                current_price = ticker.get("last", 0) (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.base_bot:[129:138]
==project.integrations.binance_liquidations:[118:126]
        if self.task:
            self.task.cancel()
            try:
                await self.task
            except asyncio.CancelledError:
                pass
            self.task = None
 (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.integrations.rest_api:[161:169]
==project.integrations.trading_view_webhooks:[114:122]
        if self.site:
            await self.site.stop()
            self.site = None

        if self.runner:
            await self.runner.cleanup()
            self.runner = None
 (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.news.analyzers.keyword_analyzer:[323:329]
==project.bots.news.analyzers.sentiment_analyzer:[280:286]
            "article": {
                "title": title,
                "url": article.get("url", ""),
                "source": article.get("source", ""),
                "published_at": article.get("published_at", ""),
            }, (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.news.news_bot:[538:545]
==project.bots.strategies.base_strategy:[935:942]
                amount=quantity,
                order_type="market",
                exchange_id=self.exchange_id,
            )

            if not order_result.success:
                logger.error( (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.main_strategy:[553:574]
==project.bots.strategies.scalping:[340:358]
            return signals

        except Exception as e:
            logger.error(
                f"Ошибка при генерации сигналов для {symbol} на {timeframe}: {str(e)}"
            )
            return {}

    def _combine_timeframe_signals(
        self, symbol: str, timeframe_signals: Dict[str, Dict[str, Any]]
    ) -> Dict[str, Any]:
        """
        Комбинирует сигналы с разных таймфреймов.

        Args:
            symbol: Символ для торговли
            timeframe_signals: Словарь с сигналами для каждого таймфрейма

        Returns:
            Комбинированный сигнал
        """ (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.main_strategy:[454:462]
==project.bots.strategies.scalping:[333:340]
            if last_macd > last_signal and prev_macd <= prev_signal:
                signals["macd"] = "buy"
            elif last_macd < last_signal and prev_macd >= prev_signal:
                signals["macd"] = "sell"
            else:
                signals["macd"] = "hold"
 (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.main_strategy:[429:437]
==project.bots.strategies.scalping:[325:333]
                    if last_rsi < self.strategy_config["rsi_oversold"]:
                        signals["rsi"] = "buy"
                    elif last_rsi > self.strategy_config["rsi_overbought"]:
                        signals["rsi"] = "sell"
                    else:
                        signals["rsi"] = "hold"

            # Сигналы от MACD (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.main_strategy:[231:238]
==project.bots.strategies.scalping:[280:288]
            macd_data = Indicators.macd(
                ohlcv,
                self.strategy_config["macd_fast_period"],
                self.strategy_config["macd_slow_period"],
                self.strategy_config["macd_signal_period"],
            )

            # Проверяем наличие данных (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.futures:[395:404]
==project.bots.strategies.memcoin:[353:362]
        for symbol in self.symbols:
            try:
                # Получаем тикер
                ticker = await self.market_data.get_ticker(self.exchange_id, symbol)
                if not ticker:
                    continue

                # Получаем текущую цену
                current_price = ticker.get("last", 0) (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.memcoin:[522:540]
==project.bots.strategies.volatility_strategy:[535:553]
                "timestamp": time.time(),
            }

        return None

    @async_handle_error
    async def _check_memcoin_position(self, symbol: str, current_price: float) -> None:
        """
        Проверяет состояние открытой позиции мемкоина.

        Args:
            symbol: Символ монеты
            current_price: Текущая цена
        """
        if symbol not in self.open_positions:
            return

        position = self.open_positions[symbol] (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.arbitrage.multi_exchange:[50:56]
==project.bots.news.news_bot:[48:55]
            "BTC/USDT",
            "ETH/USDT",
            "SOL/USDT",
            "XRP/USDT",
            "ADA/USDT",
        ] (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.base_bot:[284:293]
==project.bots.strategies.base_strategy:[304:313]
            if "name" in config:
                self.name = config["name"]

            if "exchange_id" in config:
                self.exchange_id = config["exchange_id"]

            if "symbols" in config:
                self.symbols = config["symbols"]
 (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.base_bot:[61:67]
==project.bots.strategies.base_strategy:[69:75]
        self.task = None
        self.start_time = 0
        self.last_update_time = 0
        self.market_data = MarketData.get_instance()
        self.order_executor = OrderExecutor.get_instance()
        self.position_sizer = PositionSizer() (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.base_bot:[28:36]
==project.bots.strategies.base_strategy:[30:38]
    STOPPED = "stopped"
    STARTING = "starting"
    RUNNING = "running"
    PAUSED = "paused"
    STOPPING = "stopping"
    ERROR = "error"

 (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.data.market_data:[157:167]
==project.trading.trading_bot:[434:446]
            df = pd.DataFrame(
                ohlcv_data,
                columns=["timestamp", "open", "high", "low", "close", "volume"],
            )

            # Преобразуем timestamp в datetime
            df["timestamp"] = pd.to_datetime(df["timestamp"], unit="ms")

            # Устанавливаем timestamp в качестве индекса
            df.set_index("timestamp", inplace=True)

            # Добавляем атрибуты (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.infrastructure.cache_service:[118:124]
==project.utils.websocket_client:[671:679]
            self._cleanup_task.cancel()
            try:
                await self._cleanup_task
            except asyncio.CancelledError:
                pass
            self._cleanup_task = None (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.integrations.email_sender:[26:65]
==project.integrations.slack_integration:[25:47]
    _instance = None

    @classmethod
    def get_instance(cls) -> "EmailSender":
        """
        Получает экземпляр отправителя email (Singleton).

        Returns:
            Экземпляр класса EmailSender
        """
        if cls._instance is None:
            cls._instance = cls()
        return cls._instance

    def __init__(
        self,
        smtp_server: Optional[str] = None,
        port: Optional[int] = None,
        username: Optional[str] = None,
        password: Optional[str] = None,
    ):
        """
        Инициализирует отправителя электронных писем.

        Args:
            smtp_server: SMTP-сервер
            port: Порт SMTP-сервера
            username: Имя пользователя (email)
            password: Пароль
        """
        self.config = get_config()

        # В реальном приложении параметры должны быть в конфигурации
        # self.smtp_server = smtp_server or self.config.EMAIL_SMTP_SERVER
        # self.port = port or self.config.EMAIL_SMTP_PORT
        # self.username = username or self.config.EMAIL_USERNAME
        # self.password = password or self.config.EMAIL_PASSWORD

        # Для демонстрации используем значения по умолчанию (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.main_strategy:[392:415]
==project.bots.strategies.scalping:[233:256]
            except Exception as e:
                logger.error(f"Ошибка при генерации сигналов для {symbol}: {str(e)}")

        return signals

    def _generate_timeframe_signals(
        self, symbol: str, timeframe: str, current_price: float
    ) -> Dict[str, Any]:
        """
        Генерирует торговые сигналы для конкретного таймфрейма.

        Args:
            symbol: Символ для торговли
            timeframe: Таймфрейм для анализа
            current_price: Текущая цена

        Returns:
            Словарь с сигналами
        """
        signals = {}

        try:
            # Проверяем наличие рассчитанных индикаторов (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.strategy_manager:[26:45]
==project.risk_management.portfolio_manager:[42:61]
    _instance = None

    @classmethod
    def get_instance(cls) -> "PortfolioManager":
        """
        Получает экземпляр класса PortfolioManager (Singleton).

        Returns:
            Экземпляр класса PortfolioManager
        """
        if cls._instance is None:
            cls._instance = cls()
        return cls._instance

    def __init__(self):
        """
        Инициализирует менеджер портфеля.
        """
        self.config = get_config() (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.memcoin:[353:361]
==project.bots.strategies.scalping:[177:185]
        for symbol in self.symbols:
            try:
                # Получаем тикер
                ticker = await self.market_data.get_ticker(self.exchange_id, symbol)
                if not ticker:
                    continue

                # Проверяем объем (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.memcoin:[354:362]
==project.bots.strategies.volatility_strategy:[347:355]
            try:
                # Получаем тикер
                ticker = await self.market_data.get_ticker(self.exchange_id, symbol)
                if not ticker:
                    continue

                # Получаем текущую цену
                current_price = ticker.get("last", 0) (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.news.news_bot:[606:614]
==project.bots.strategies.mean_revision:[376:385]
            if not ticker:
                continue

            current_price = ticker.get("last", 0)
            if current_price <= 0:
                continue

            # Получаем детали позиции (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.strategies.main_strategy:[360:368]
==project.bots.strategies.mean_revision:[372:380]
        for symbol in self.symbols:
            try:
                # Получаем тикер
                ticker = await self.market_data.get_ticker(self.exchange_id, symbol)
                if not ticker:
                    continue

                # Проверяем объем (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.base_bot:[320:340]
==project.bots.strategies.base_strategy:[480:504]
        pass

    @abstractmethod
    async def _generate_trading_signals(self) -> Dict[str, Dict[str, Any]]:
        """
        Генерирует торговые сигналы на основе текущих рыночных данных.
        Должен быть переопределен в подклассах.

        Returns:
            Словарь с сигналами для каждого символа
        """
        pass

    @async_handle_error
    async def _update_market_data(self) -> None:
        """
        Обновляет рыночные данные для всех символов и таймфреймов.
        """
        for symbol in self.symbols:
            try:
                # Получаем текущий тикер
                await self.market_data.get_ticker(self.exchange_id, symbol)

                # Получаем данные OHLCV для всех таймфреймов (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.api.rest_api:[249:254]
==project.integrations.rest_api:[382:387]
                symbol=symbol,
                side=side,
                amount=amount,
                order_type=order_type,
                price=price, (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.bots.arbitrage.core:[51:70]
==project.data.symbol_manager:[23:42]
    _instance = None

    @classmethod
    def get_instance(cls) -> "SymbolManager":
        """
        Получает экземпляр класса SymbolManager (Singleton).

        Returns:
            Экземпляр класса SymbolManager
        """
        if cls._instance is None:
            cls._instance = cls()
        return cls._instance

    def __init__(self):
        """
        Инициализирует менеджер символов.
        """
        self.config = get_config() (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.infrastructure.database:[24:49]
==project.infrastructure.message_broker:[26:51]
    _instance = None

    @classmethod
    def get_instance(cls, connection_string: Optional[str] = None) -> "Database":
        """
        Получает экземпляр базы данных (Singleton).

        Args:
            connection_string: Строка подключения к БД (None для использования из конфигурации)

        Returns:
            Экземпляр класса Database
        """
        if cls._instance is None:
            cls._instance = cls(connection_string)
        return cls._instance

    def __init__(self, connection_string: Optional[str] = None):
        """
        Инициализирует объект базы данных.

        Args:
            connection_string: Строка подключения к БД (None для использования из конфигурации)
        """
        self.config = get_config() (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.infrastructure.cache_service:[62:81]
==project.trade_executor.order_executor:[52:71]
    _instance = None

    @classmethod
    def get_instance(cls) -> "CacheService":
        """
        Получает экземпляр сервиса кэширования (Singleton).

        Returns:
            Экземпляр класса CacheService
        """
        if cls._instance is None:
            cls._instance = cls()
        return cls._instance

    def __init__(self):
        """
        Инициализирует сервис кэширования.
        """
        self.config = get_config() (duplicate-code)
integrations/telegram_integration.py:1:0: R0801: Similar lines in 2 files
==project.api.rest_api:[30:35]
==project.console:[33:38]
market_data = MarketData.get_instance()
order_executor = OrderExecutor.get_instance()
bot_manager = BotManager.get_instance()
strategy_manager = StrategyManager.get_instance()
arbitrage_core = ArbitrageCore.get_instance() (duplicate-code)

------------------------------------------------------------------
Your code has been rated at 7.70/10 (previous run: 7.70/10, +0.00)

