version: '3.8'

services:
  app:
    build: .
    container_name: trading_bot
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./:/app
      - ./logs:/var/log/trading_bot
    networks:
      - trading_network
    depends_on:
      - db
      - redis
      - rabbitmq
    command: python -m project.main.application

  db:
    image: postgres:15-alpine
    container_name: trading_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DATABASE_USER:-user}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-password}
      POSTGRES_DB: ${DATABASE_NAME:-trading_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - trading_network

  redis:
    image: redis:7-alpine
    container_name: trading_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispassword}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - trading_network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: trading_rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - trading_network

  grafana:
    image: grafana/grafana:latest
    container_name: trading_grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    networks:
      - trading_network
    depends_on:
      - db

networks:
  trading_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  grafana_data: